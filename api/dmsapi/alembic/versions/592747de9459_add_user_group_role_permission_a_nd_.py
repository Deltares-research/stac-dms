"""Add User, Group, Role, Permission, a
nd GroupUserLink tables

Revision ID: 592747de9459
Revises: c147404fda3c
Create Date: 2024-10-28 07:24:18.874195

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '592747de9459'
down_revision: Union[str, None] = 'c147404fda3c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groupuserlink',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object', sqlmodel.AutoString(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.execute("INSERT INTO role (id, name) VALUES (1, 'admin')")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('permission')
    op.drop_table('groupuserlink')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('group')
    # ### end Alembic commands ###
