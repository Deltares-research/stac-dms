import { z } from "zod";
declare const primitiveSchema: z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean, z.ZodNull]>;
export type JsonPrimitive = z.infer<typeof primitiveSchema>;
export declare function primitive(): z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean, z.ZodNull]>;
export type JsonObject = {
    [key: string]: Json;
};
export type JsonArray = Array<Json>;
export type Json = JsonPrimitive | JsonObject | JsonArray;
export declare function json(): z.ZodType<Json, z.ZodTypeDef, Json>;
export declare function object(): z.ZodRecord<z.ZodString, z.ZodType<Json, z.ZodTypeDef, Json>>;
export declare function array(): z.ZodArray<z.ZodType<Json, z.ZodTypeDef, Json>, "many">;
export declare const stringifiedJsonSchema: z.ZodType<Json, z.ZodTypeDef, string>;
export declare function stringifiedJson(): z.ZodType<Json, z.ZodTypeDef, string>;
export {};
