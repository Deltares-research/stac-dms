{"version":3,"file":"DataTable-wjuY5lu7.js","sources":["../../../../components/ui/table/Table.vue","../../../../components/ui/table/TableBody.vue","../../../../components/ui/table/TableCell.vue","../../../../components/ui/table/TableHead.vue","../../../../components/ui/table/TableHeader.vue","../../../../components/ui/table/TableRow.vue","../../../../components/table/DataTable.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<{\n  class?: HTMLAttributes['class']\n}>()\n</script>\n\n<template>\n  <div class=\"relative w-full overflow-auto\">\n    <table :class=\"cn('w-full caption-bottom text-sm', props.class)\">\n      <slot />\n    </table>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<{\n  class?: HTMLAttributes['class']\n}>()\n</script>\n\n<template>\n  <tbody :class=\"cn('[&_tr:last-child]:border-0', props.class)\">\n    <slot />\n  </tbody>\n</template>\n","<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<{\n  class?: HTMLAttributes['class']\n}>()\n</script>\n\n<template>\n  <td\n    :class=\"\n      cn(\n        'p-4 align-middle [&:has([role=checkbox])]:pr-0',\n        props.class,\n      )\n    \"\n  >\n    <slot />\n  </td>\n</template>\n","<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<{\n  class?: HTMLAttributes['class']\n}>()\n</script>\n\n<template>\n  <th :class=\"cn('h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0', props.class)\">\n    <slot />\n  </th>\n</template>\n","<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<{\n  class?: HTMLAttributes['class']\n}>()\n</script>\n\n<template>\n  <thead :class=\"cn('[&_tr]:border-b', props.class)\">\n    <slot />\n  </thead>\n</template>\n","<script setup lang=\"ts\">\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<{\n  class?: HTMLAttributes['class']\n}>()\n</script>\n\n<template>\n  <tr :class=\"cn('border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted', props.class)\">\n    <slot />\n  </tr>\n</template>\n","<script setup lang=\"ts\" generic=\"TData, TValue\">\nimport type {ColumnDef, ColumnFiltersState, SortingState} from '@tanstack/vue-table'\nimport { valueUpdater } from '@/lib/utils'\nimport { h, ref } from 'vue'\nimport {\n    FlexRender,\n    getCoreRowModel,\n    getPaginationRowModel,\n    getFilteredRowModel,\n    getSortedRowModel,\n    useVueTable,\n} from \"@tanstack/vue-table\"\n\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableHeader,\n    TableRow,\n} from '@/components/ui/table'\n\nconst props = defineProps<{\n    columns: ColumnDef<TData, TValue>[]\n    data: TData[]\n}>()\n\nconst sorting = ref<SortingState>([])\nconst columnFilters = ref<ColumnFiltersState>([])\n\nconst table = useVueTable({\n    get data() { return props.data },\n    get columns() { return props.columns },\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    onSortingChange: updaterOrValue => valueUpdater(updaterOrValue, sorting),\n    onColumnFiltersChange: updaterOrValue => valueUpdater(updaterOrValue, columnFilters),\n    getFilteredRowModel: getFilteredRowModel(),\n    state: {\n        get sorting() { return sorting.value },\n        get columnFilters() { return columnFilters.value },\n    },\n})\n</script>\n\n<template>\n    <div class=\"flex items-center py-4\">\n        <Input class=\"max-w-sm\" placeholder=\"Filter ...\"\n               :model-value=\"table.getColumn('title')?.getFilterValue() as string\"\n               @update:model-value=\" table.getColumn('title')?.setFilterValue($event)\" />\n    </div>\n    <div class=\"border rounded-md\">\n        <Table>\n            <TableHeader>\n                <TableRow v-for=\"headerGroup in table.getHeaderGroups()\" :key=\"headerGroup.id\">\n                    <TableHead v-for=\"header in headerGroup.headers\" :key=\"header.id\">\n                        <FlexRender\n                                v-if=\"!header.isPlaceholder\" :render=\"header.column.columnDef.header\"\n                                :props=\"header.getContext()\"\n                        />\n                    </TableHead>\n                </TableRow>\n            </TableHeader>\n            <TableBody>\n                <template v-if=\"table.getRowModel().rows?.length\">\n                    <TableRow\n                            v-for=\"row in table.getRowModel().rows\" :key=\"row.id\"\n                            :data-state=\"row.getIsSelected() ? 'selected' : undefined\"\n                    >\n                        <TableCell v-for=\"cell in row.getVisibleCells()\" :key=\"cell.id\">\n                            <FlexRender :render=\"cell.column.columnDef.cell\" :props=\"cell.getContext()\" />\n                        </TableCell>\n                    </TableRow>\n                </template>\n                <template v-else>\n                    <TableRow>\n                        <TableCell :colspan=\"columns.length\" class=\"h-24 text-center\">\n                            No results.\n                        </TableCell>\n                    </TableRow>\n                </template>\n            </TableBody>\n        </Table>\n    </div>\n    <div class=\"flex items-center justify-end py-4 space-x-2\">\n        <Button\n            variant=\"outline\"\n            size=\"sm\"\n            :disabled=\"!table.getCanPreviousPage()\"\n            @click=\"table.previousPage()\"\n        >\n            Previous\n        </Button>\n        <Button\n            variant=\"outline\"\n            size=\"sm\"\n            :disabled=\"!table.getCanNextPage()\"\n            @click=\"table.nextPage()\"\n        >\n            Next\n        </Button>\n    </div>\n</template>"],"names":[],"mappings":";;;;;;;;;;;;AAIA,UAAM,QAAQ;;;;;;;;;;;;;;;;;;;;;ACAd,UAAM,QAAQ;;;;;;;;;;;;;;;;;;;;;;;ACAd,UAAM,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;ACAd,UAAM,QAAQ;;;;;;;;;;;;;;;;;;;;;;;ACAd,UAAM,QAAQ;;;;;;;;;;;;;;;;;;;;;;;ACAd,UAAM,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;ACkBd,UAAM,QAAQ;AAKR,UAAA,UAAU,IAAkB,CAAA,CAAE;AAC9B,UAAA,gBAAgB,IAAwB,CAAA,CAAE;AAEhD,UAAM,QAAQ,YAAY;AAAA,MACtB,IAAI,OAAO;AAAE,eAAO,MAAM;AAAA,MAAK;AAAA,MAC/B,IAAI,UAAU;AAAE,eAAO,MAAM;AAAA,MAAQ;AAAA,MACrC,iBAAiB,gBAAgB;AAAA,MACjC,uBAAuB,sBAAsB;AAAA,MAC7C,mBAAmB,kBAAkB;AAAA,MACrC,iBAAiB,CAAA,mBAAkB,aAAa,gBAAgB,OAAO;AAAA,MACvE,uBAAuB,CAAA,mBAAkB,aAAa,gBAAgB,aAAa;AAAA,MACnF,qBAAqB,oBAAoB;AAAA,MACzC,OAAO;AAAA,QACH,IAAI,UAAU;AAAE,iBAAO,QAAQ;AAAA,QAAM;AAAA,QACrC,IAAI,gBAAgB;AAAE,iBAAO,cAAc;AAAA,QAAM;AAAA,MACrD;AAAA,IAAA,CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}