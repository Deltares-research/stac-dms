{"file":"_facility_id_-Njwoc2MF.js","mappings":"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","names":["_withAsyncContext"],"sources":["../../../../components/keywords/DeleteFacility.vue","../../../../components/keywords/FacilityGroupLink.vue","../../../../components/ui/select/Select.vue","../../../../components/ui/select/SelectValue.vue","../../../../components/ui/select/SelectTrigger.vue","../../../../components/ui/select/SelectContent.vue","../../../../components/ui/select/SelectGroup.vue","../../../../components/ui/select/SelectItem.vue","../../../../components/ui/select/SelectScrollUpButton.vue","../../../../components/ui/select/SelectScrollDownButton.vue","../../../../components/keywords/LinkKeywordGroup.vue","../../../../components/keywords/UpdateFacility.vue","../../../../pages/keywords/facilities/[facility_id].vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { useForm } from \"vee-validate\"\nimport { toast } from \"../ui/toast\"\nimport { Trash2 } from \"lucide-vue-next\"\n\nlet { facility_id } = defineProps<{\n  facility_id: string\n}>()\n\nlet { $api } = useNuxtApp()\n\nlet deleteFacilityForm = useForm()\n\nlet deleteFacility = deleteFacilityForm.handleSubmit(async () => {\n  await $api(`/facility/{facility_id}`, {\n    method: \"delete\",\n    path: {\n      facility_id,\n    },\n  })\n\n  toast({\n    title: \"Facility deleted\",\n  })\n\n  await navigateTo(\"/keywords/facilities\")\n})\n</script>\n\n<template>\n  <form @submit=\"deleteFacility\">\n    <Button variant=\"outline\" size=\"icon\" type=\"submit\" class=\"w-8 h-8\">\n      <Trash2 class=\"w-4 h-4\" />\n    </Button>\n  </form>\n</template>\n","<script setup lang=\"ts\">\nimport { useForm } from \"vee-validate\"\nimport { toast } from \"../ui/toast\"\nimport { X } from \"lucide-vue-next\"\n\nlet { facility_id, onUnlink, group } = defineProps<{\n  facility_id: string\n  onUnlink(): void\n  group: { id: string; group_name_nl: string }\n}>()\n\nlet { $api } = useNuxtApp()\n\nlet unlinkForm = useForm()\n\nlet onSubmitUnLinkGroupForm = unlinkForm.handleSubmit(async (values) => {\n  await $api(\"/facility_keywordgroup_link\", {\n    method: \"delete\",\n    body: {\n      keyword_group_id: group.id,\n      facility_id,\n    },\n  })\n\n  toast({\n    title: \"Keyword group unlinked\",\n  })\n\n  onUnlink()\n})\n</script>\n\n<template>\n  <form\n    @submit=\"onSubmitUnLinkGroupForm\"\n    class=\"rounded bg-gray-100 flex items-center justify-between gap-3 px-4 py-0.5\"\n  >\n    {{ group.group_name_nl }}\n    <Button variant=\"link\" size=\"sm\" type=\"submit\" class=\"hover:text-red-500\">\n      <X class=\"w-4 h-4\" />\n    </Button>\n  </form>\n</template>\n","<script setup lang=\"ts\">\nimport type { SelectRootEmits, SelectRootProps } from 'radix-vue'\nimport { SelectRoot, useForwardPropsEmits } from 'radix-vue'\n\nconst props = defineProps<SelectRootProps>()\nconst emits = defineEmits<SelectRootEmits>()\n\nconst forwarded = useForwardPropsEmits(props, emits)\n</script>\n\n<template>\n  <SelectRoot v-bind=\"forwarded\">\n    <slot />\n  </SelectRoot>\n</template>\n","<script setup lang=\"ts\">\nimport { SelectValue, type SelectValueProps } from 'radix-vue'\n\nconst props = defineProps<SelectValueProps>()\n</script>\n\n<template>\n  <SelectValue v-bind=\"props\">\n    <slot />\n  </SelectValue>\n</template>\n","<script setup lang=\"ts\">\nimport { type HTMLAttributes, computed } from 'vue'\nimport { SelectIcon, SelectTrigger, type SelectTriggerProps, useForwardProps } from 'radix-vue'\nimport { ChevronDown } from 'lucide-vue-next'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<SelectTriggerProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <SelectTrigger\n    v-bind=\"forwardedProps\"\n    :class=\"cn(\n      'flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1',\n      props.class,\n    )\"\n  >\n    <slot />\n    <SelectIcon as-child>\n      <ChevronDown class=\"w-4 h-4 opacity-50\" />\n    </SelectIcon>\n  </SelectTrigger>\n</template>\n","<script setup lang=\"ts\">\nimport { type HTMLAttributes, computed } from 'vue'\nimport {\n  SelectContent,\n  type SelectContentEmits,\n  type SelectContentProps,\n  SelectPortal,\n  SelectViewport,\n  useForwardPropsEmits,\n} from 'radix-vue'\nimport { SelectScrollDownButton, SelectScrollUpButton } from '.'\nimport { cn } from '@/lib/utils'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst props = withDefaults(\n  defineProps<SelectContentProps & { class?: HTMLAttributes['class'] }>(),\n  {\n    position: 'popper',\n  },\n)\nconst emits = defineEmits<SelectContentEmits>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <SelectPortal>\n    <SelectContent\n      v-bind=\"{ ...forwarded, ...$attrs }\" :class=\"cn(\n        'relative z-50 max-h-96 min-w-32 overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        position === 'popper'\n          && 'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n        props.class,\n      )\n      \"\n    >\n      <SelectScrollUpButton />\n      <SelectViewport :class=\"cn('p-1', position === 'popper' && 'h-[--radix-select-trigger-height] w-full min-w-[--radix-select-trigger-width]')\">\n        <slot />\n      </SelectViewport>\n      <SelectScrollDownButton />\n    </SelectContent>\n  </SelectPortal>\n</template>\n","<script setup lang=\"ts\">\nimport { type HTMLAttributes, computed } from 'vue'\nimport { SelectGroup, type SelectGroupProps } from 'radix-vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<SelectGroupProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n</script>\n\n<template>\n  <SelectGroup :class=\"cn('p-1 w-full', props.class)\" v-bind=\"delegatedProps\">\n    <slot />\n  </SelectGroup>\n</template>\n","<script setup lang=\"ts\">\nimport { type HTMLAttributes, computed } from 'vue'\nimport {\n  SelectItem,\n  SelectItemIndicator,\n  type SelectItemProps,\n  SelectItemText,\n  useForwardProps,\n} from 'radix-vue'\nimport { Check } from 'lucide-vue-next'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<SelectItemProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <SelectItem\n    v-bind=\"forwardedProps\"\n    :class=\"\n      cn(\n        'relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n        props.class,\n      )\n    \"\n  >\n    <span class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectItemIndicator>\n        <Check class=\"h-4 w-4\" />\n      </SelectItemIndicator>\n    </span>\n\n    <SelectItemText>\n      <slot />\n    </SelectItemText>\n  </SelectItem>\n</template>\n","<script setup lang=\"ts\">\nimport { type HTMLAttributes, computed } from 'vue'\nimport { SelectScrollUpButton, type SelectScrollUpButtonProps, useForwardProps } from 'radix-vue'\nimport { ChevronUp } from 'lucide-vue-next'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<SelectScrollUpButtonProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <SelectScrollUpButton v-bind=\"forwardedProps\" :class=\"cn('flex cursor-default items-center justify-center py-1', props.class)\">\n    <slot>\n      <ChevronUp class=\"h-4 w-4\" />\n    </slot>\n  </SelectScrollUpButton>\n</template>\n","<script setup lang=\"ts\">\nimport { type HTMLAttributes, computed } from 'vue'\nimport { SelectScrollDownButton, type SelectScrollDownButtonProps, useForwardProps } from 'radix-vue'\nimport { ChevronDown } from 'lucide-vue-next'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<SelectScrollDownButtonProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <SelectScrollDownButton v-bind=\"forwardedProps\" :class=\"cn('flex cursor-default items-center justify-center py-1', props.class)\">\n    <slot>\n      <ChevronDown class=\"h-4 w-4\" />\n    </slot>\n  </SelectScrollDownButton>\n</template>\n","<script setup lang=\"ts\">\nimport { toTypedSchema } from \"@vee-validate/zod\"\nimport { useForm } from \"vee-validate\"\nimport { z } from \"zod\"\nimport { toast } from \"../ui/toast\"\n\nlet { data: allKeywordGroups } = await useApi(\"/keywordgroups\")\n\nlet { facility_id, onLink } = defineProps<{\n  facility_id: string\n  onLink?(): void\n}>()\n\nlet { $api } = useNuxtApp()\n\nlet linkGroupSchema = toTypedSchema(\n  z.object({\n    keyword_group_id: z.string(),\n  }),\n)\n\nlet linkGroupForm = useForm({\n  validationSchema: linkGroupSchema,\n})\n\nlet onSubmitLinkGroupForm = linkGroupForm.handleSubmit(async (values) => {\n  await $api(\"/facility_keywordgroup_link\", {\n    method: \"post\",\n    body: {\n      ...values,\n      facility_id,\n    },\n  })\n\n  toast({\n    title: \"Keyword group linked\",\n  })\n\n  onLink?.()\n})\n</script>\n\n<template>\n  <form @submit=\"onSubmitLinkGroupForm\" class=\"flex items-end gap-1.5 w-full\">\n    <FormField v-slot=\"{ componentField }\" name=\"keyword_group_id\">\n      <FormItem class=\"w-full\">\n        <FormLabel>Link keyword group</FormLabel>\n        <Select v-bind=\"componentField\">\n          <FormControl>\n            <SelectTrigger>\n              <SelectValue placeholder=\"Select a keyword group\" />\n            </SelectTrigger>\n          </FormControl>\n          <SelectContent>\n            <SelectGroup>\n              <SelectItem\n                v-for=\"group in allKeywordGroups\"\n                :key=\"group.id\"\n                :value=\"group.id\"\n              >\n                {{ group.group_name_nl }}\n              </SelectItem>\n            </SelectGroup>\n          </SelectContent>\n        </Select>\n        <FormMessage />\n      </FormItem>\n    </FormField>\n\n    <Button type=\"submit\">Link</Button>\n  </form>\n</template>\n","<script setup lang=\"ts\">\nimport { toTypedSchema } from \"@vee-validate/zod\"\nimport { useForm } from \"vee-validate\"\nimport { z } from \"zod\"\nimport type { Facility } from \"~/lib/types\"\nimport { toast } from \"../ui/toast\"\nimport { CheckIcon } from \"lucide-vue-next\"\n\nlet { facility, onUpdate } = defineProps<{\n  facility: Facility\n  onUpdate?(): void\n}>()\n\nlet { $api } = useNuxtApp()\n\nlet updateSchema = toTypedSchema(\n  z.object({\n    name: z.string().min(2),\n  }),\n)\n\nlet form = useForm({\n  validationSchema: updateSchema,\n  initialValues: {\n    name: facility.name ?? undefined,\n  },\n})\n\nlet onSubmit = form.handleSubmit(async (values) => {\n  await $api(`/facility/{facility_id}`, {\n    method: \"put\",\n    body: values,\n    path: {\n      // TODO: Fix API spec to make id required\n      facility_id: facility.id ?? \"\",\n    },\n  })\n\n  toast({\n    title: \"Facility updated\",\n  })\n\n  onUpdate?.()\n})\n</script>\n\n<template>\n  <form @submit=\"onSubmit\" class=\"flex items-center gap-1.5 w-full\">\n    <FormField v-slot=\"{ componentField }\" name=\"name\">\n      <FormItem class=\"w-full\">\n        <Input\n          v-bind=\"componentField\"\n          class=\"border-0 -ml-3 h-8 !ring-0 rounded-none outline-none text-2xl font-bold\"\n        />\n      </FormItem>\n    </FormField>\n\n    <Button\n      v-if=\"form.isFieldDirty('name')\"\n      type=\"submit\"\n      variant=\"outline\"\n      size=\"icon\"\n      class=\"flex-shrink-0 w-8 h-8\"\n    >\n      <CheckIcon class=\"w-4 h-4 text-emerald-500\" />\n    </Button>\n  </form>\n</template>\n","<script setup lang=\"ts\">\nimport DeleteFacility from \"~/components/keywords/DeleteFacility.vue\"\nimport FacilityGroupLink from \"~/components/keywords/FacilityGroupLink.vue\"\nimport LinkKeywordGroup from \"~/components/keywords/LinkKeywordGroup.vue\"\nimport UpdateFacility from \"~/components/keywords/UpdateFacility.vue\"\n\nlet route = useRoute()\n\nlet facility_id = route.params.facility_id as string\n\nlet { data: facility } = await useApi(`/facility/{facility_id}`, {\n  path: {\n    facility_id: route.params.facility_id as string,\n  },\n})\n\nlet { data: keywordgroups, refresh } = await useApi(\"/keywords\", {\n  query: {\n    facility_id: route.params.facility_id as string,\n  },\n})\n</script>\n\n<template>\n  <div v-if=\"facility\">\n    <div\n      class=\"uppercase text-muted-foreground text-xs font-semibold tracking-wider\"\n    >\n      Facility\n    </div>\n    <div class=\"mt-3 flex items-center justify-between gap-1.5\">\n      <UpdateFacility :facility=\"facility\" />\n      <DeleteFacility :facility_id=\"facility_id\" />\n    </div>\n\n    <ul class=\"mt-5 flex flex-col gap-1\">\n      <li v-for=\"group in keywordgroups\" :key=\"group.id\">\n        <FacilityGroupLink\n          :group=\"group\"\n          :facility_id=\"facility_id\"\n          @unlink=\"refresh\"\n        />\n      </li>\n    </ul>\n\n    <hr class=\"my-8\" />\n\n    <LinkKeywordGroup\n      :facility_id=\"route.params.facility_id as string\"\n      @link=\"refresh\"\n    />\n  </div>\n</template>\n"],"version":3}