{"version":3,"file":"CollectionCardForm-DaUQ5x9P.js","sources":["../../../../components/collections/CollectionCardForm.vue"],"sourcesContent":["<template>\n  <Card class=\"w-9/10 p-10\">\n    <CardHeader>\n      <CardTitle>{{ cardTitle }}</CardTitle>\n    </CardHeader>\n    <CardContent>\n      <form @submit.prevent=\"emitChange\">\n        <div class=\"grid items-center w-full gap-4\">\n          <div class=\"flex flex-col space-y-1.5\">\n            <Label for=\"name\">Name</Label>\n            <Input\n              v-if=\"readonly\"\n              id=\"name\"\n              v-model=\"name\"\n              placeholder=\"Name of your collection\"\n              readonly\n            />\n            <Input\n              v-if=\"!readonly\"\n              id=\"name\"\n              v-model=\"name\"\n              placeholder=\"Name of your collection\"\n            />\n          </div>\n          <div class=\"flex flex-col space-y-1.5\">\n            <Label for=\"description\">Description</Label>\n            <Textarea\n              v-if=\"readonly\"\n              id=\"description\"\n              v-model=\"description\"\n              readonly\n            />\n            <Textarea v-if=\"!readonly\" id=\"description\" v-model=\"description\" />\n            <div class=\"flex flex-col space-y-1.5\">\n              <Label for=\"collectionType\">Collection type</Label>\n              <CustomDropDownComponent\n                v-if=\"!readonly\"\n                id=\"collectionType\"\n                :options=\"collectionType\"\n                v-model=\"selectedCollectionTypeId\"\n              />\n              <Input\n                v-if=\"readonly\"\n                readonly\n                :placeholder=\"selectedCollectionType.label\"\n              ></Input>\n            </div>\n            <div class=\"flex flex-col space-y-1.5\">\n              <Label for=\"keywordsFacility\">Keywords</Label>\n              <CustomDropDownComponent\n                v-if=\"!readonly\"\n                id=\"keywordsFacility\"\n                :options=\"keywordsFacilities\"\n                v-model=\"selectedKeywordsFacilityId\"\n              />\n              <Input\n                v-if=\"readonly\"\n                readonly\n                :placeholder=\"selectedKeywordFacility?.name\"\n              ></Input>\n            </div>\n          </div>\n        </div>\n      </form>\n      <p v-if=\"errors\" class=\"text-red-500\">{{ errors }}</p>\n    </CardContent>\n    <CardFooter class=\"flex justify-between px-6 pb-6\">\n      <Button variant=\"outline\">\n        <NuxtLink to=\"/collections\">Cancel</NuxtLink>\n      </Button>\n      <Button @click=\"emitChange\">{{ buttonTitle }}</Button>\n    </CardFooter>\n  </Card>\n</template>\n\n<script setup lang=\"ts\">\nimport type { Collection } from \"@/lib/collection\"\nimport { collectionTypes } from \"@/lib/collectionTypes\"\nimport { ref } from \"vue\"\nimport type { DropDownOption } from \"@lib/lib/dropDownOption\"\n\nconst emit = defineEmits([\"update\"])\n\nlet { data: keywords } = await useApi(\"/facilities\")\nconsole.log({ keywords })\nlet keywordsFacilities: DropDownOption[] =\n  keywords.value?.map((item) => {\n    return { value: item.id, label: item.name }\n  }) ?? []\nkeywordsFacilities.unshift({ value: \"No keywords\", label: \"No keywords\" })\n\nconst props = defineProps({\n  cardTitle: String,\n  title: String,\n  description: String,\n  collectionType: String,\n  keywordFacility: String,\n  buttonTitle: String,\n  errors: String,\n  readonly: Boolean,\n})\n\nconst name = ref(props.title ?? \"\")\nconst description = ref(props.description ?? \"\")\nconst selectedCollectionTypeId = ref(props.collectionType)\nconst selectedKeywordFacility = keywords.value?.find(\n  (item) => item.id == props.keywordFacility,\n)\nconst selectedCollectionType = collectionTypes.find(\n  (item) => item.value == props.collectionType,\n)\nconst selectedKeywordsFacilityId = ref(props.keywordFacility)\n\nconst collectionType = collectionTypes\n\nfunction emitChange() {\n  const newCollection: Collection = {\n    title: name.value,\n    description: description.value,\n    collectionType: selectedCollectionTypeId.value,\n    keywordsFacility: selectedKeywordsFacilityId.value,\n  }\n  emit(\"update\", newCollection)\n}\n</script>\n"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA,UAAM,OAAO;AAEb,QAAI,EAAE,MAAM,cAAa,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM,OAAO,4BAAa,CAAA;AAC3C,YAAA,IAAI,EAAE,SAAA,CAAU;AACxB,QAAI,uBACF,cAAS,UAAT,mBAAgB,IAAI,CAAC,SAAS;AAC5B,aAAO,EAAE,OAAO,KAAK,IAAI,OAAO,KAAK;IACtC,OAAK,CAAA;AACR,uBAAmB,QAAQ,EAAE,OAAO,eAAe,OAAO,eAAe;AAEzE,UAAM,QAAQ;AAWd,UAAM,OAAO,IAAI,MAAM,SAAS,EAAE;AAClC,UAAM,cAAc,IAAI,MAAM,eAAe,EAAE;AACzC,UAAA,2BAA2B,IAAI,MAAM,cAAc;AACnD,UAAA,2BAA0B,cAAS,UAAT,mBAAgB;AAAA,MAC9C,CAAC,SAAS,KAAK,MAAM,MAAM;AAAA;AAE7B,UAAM,yBAAyB,gBAAgB;AAAA,MAC7C,CAAC,SAAS,KAAK,SAAS,MAAM;AAAA,IAAA;AAE1B,UAAA,6BAA6B,IAAI,MAAM,eAAe;AAE5D,UAAM,iBAAiB;AAEvB,aAAS,aAAa;AACpB,YAAM,gBAA4B;AAAA,QAChC,OAAO,KAAK;AAAA,QACZ,aAAa,YAAY;AAAA,QACzB,gBAAgB,yBAAyB;AAAA,QACzC,kBAAkB,2BAA2B;AAAA,MAAA;AAE/C,WAAK,UAAU,aAAa}