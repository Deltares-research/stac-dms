{"file":"_id_-XwGJnZ6s.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOI,QAAA,UAAU,IAAI;AAEd,QAAA,aAAa,IAAI,WAAW;AAQhC,QAAI,kBAAkB,QAAQ,aAAa,QAAA,cAAc;AAAA,MACvD,mBAAmB;AAAA,MACnB,gBAAgB;AAAA,IAAA,CACjB;AAED,QAAI,SAAS,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,QAAA,OAAO,IAAI,CAAC;AAEhB,QAAI,YAAY;AAEZ,QAAA,aAAa,IAAI,KAAK;AACtB,QAAA,WAAW,IAAoC,SAAS;AAExD,QAAA,UAAU,CAAC,UAAU;AACnB,UAAA,MAAM,UAAU,MAAM;AACtB,UAAA,cAAc,IAAI;AACV,kBAAA,QAAQ,CAAC,YAAY;AAC3B,YAAA,YAAY,MAAM,QAAS;AAC/B,YAAI,cAAc,OAAO;AAAA,MAAA,CAC1B;AACD,iBAAW,QAAQ;AAAA,IAAA;AAGrB,QAAI,kBAAkB;AAEtB,aAAS,gBAAgB,OAAO;AACd,sBAAA,QAAQ,MAAM,SAAS,CAAC;AAAA,IAC1C;AAEA,aAAS,SAAS,OAAO;;AACnB,UAAA,WAAW,MAAM,OAAO,YAAY;AACpC,UAAA,oBAAoB,QAAQ,oBAAoB,UAAU;AAAA,QAC5D,gBAAgB;AAAA,QAChB,mBAAmB;AAAA,MAAA,CACpB;AACD,sCAAA,iCAAgB;AAAA,IAClB;AAES,IAAA,SAAA,iBAAiB,WAAW,CAAC,UAAU;AAC9C,UAAI,MAAM,QAAQ,YAAY,MAAM,QAAQ,aAAa;AACjC;MACxB;AAAA,IAAA,CACD;AAED,aAAS,wBAAwB;AAC3B,UAAA,MAAM,UAAU,MAAM;AAC1B,UAAI,gBAAgB,OAAO;AACrB,YAAA,cAAc,gBAAgB,KAAK;AAAA,MACzC;AAAA,IACF;AAEA,aAAS,eAAe,MAAsC;AAC5D,eAAS,QAAQ;AACjB,iBAAW,QAAQ;AAAA,IACrjEA,UAAM,QAAQ;AAEd,UAAM,QAAQ;AAER,UAAA,iBAAiB,SAAS,MAAM;AACpC,YAAM,EAAE,OAAO,GAAG,GAAG,cAAc;AAE5B,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,YAAY,qBAAqB,gBAAgB,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACX5D,UAAM,QAAQ;AAER,UAAA,iBAAiB,SAAS,MAAM;AACpC,YAAM,EAAE,OAAO,GAAG,GAAG,cAAc;AAE5B,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,iBAAiB,gBAAgB,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPrD,UAAM,QAAQ;AAER,UAAA,iBAAiB,SAAS,MAAM;AACpC,YAAM,EAAE,OAAO,GAAG,GAAG,cAAc;AAE5B,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,iBAAiB,gBAAgB,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTrD,UAAM,QAAQ;AAER,UAAA,iBAAiB,SAAS,MAAM;AACpC,YAAM,EAAE,OAAO,GAAG,GAAG,cAAc;AAE5B,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,iBAAiB,gBAAgB,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVrD,UAAM,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAd,UAAM,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEd,UAAM,QAAQ;AAER,UAAA,iBAAiB,SAAS,MAAM;AACpC,YAAM,EAAE,OAAO,GAAG,GAAG,cAAc;AAE5B,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,iBAAiB,gBAAgB,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRrD,UAAM,QAAQ;AAER,UAAA,iBAAiB,SAAS,MAAM;AACpC,YAAM,EAAE,OAAO,GAAG,GAAG,cAAc;AAE5B,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,iBAAiB,gBAAgB,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRrD,UAAM,QAAQ;AAER,UAAA,iBAAiB,SAAS,MAAM;AACpC,YAAM,EAAE,OAAO,GAAG,GAAG,cAAc;AAE5B,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,iBAAiB,gBAAgB,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRrD,UAAM,QAAQ;AAER,UAAA,iBAAiB,SAAS,MAAM;AACpC,YAAM,EAAE,OAAO,GAAG,GAAG,cAAc;AAE5B,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,iBAAiB,gBAAgB,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNrD,UAAM,QAAQ;AAER,UAAA,iBAAiB,SAAS,MAAM;AACpC,YAAM,EAAE,OAAO,GAAG,GAAG,cAAc;AAE5B,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,iBAAiB,gBAAgB,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRrD,UAAM,QAAQ;AAER,UAAA,iBAAiB,SAAS,MAAM;AACpC,YAAM,EAAE,OAAO,GAAG,GAAG,cAAc;AAE5B,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,iBAAiB,gBAAgB,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfrD,MAAe,4BAAA;;;;;;;AC2Bf,UAAM,QAAQ;AACC,cAAU;AACnB,UAAA,KAAK,MAAM,OAAO;AAExB,UAAM,WAAW,MAAM,MAAM,WAAW,aAAa;AAC/C,UAAA,cAAc,WAAW,aAAa;AAExC,QAAA,WAAW,0BAA0B,MAAM,IAAI;AACnD,QAAI,yBAAyB,SAAS,KAAO,EAAA,IAAI,CAAC,SAAS;AACzD,aAAO,EAAE,OAAO,MAAM,OAAO,KAAK;AAAA,IAAA,CACnC;AACD,2BAAuB,QAAQ;AAAA,MAC7B,OAAO;AAAA,MACP,OAAO;AAAA,IAAA,CACR;AAEG,QAAA,WAAW,IAAI,CAAA,CAAE;AAErB,QAAI,SAAS,IAAI;AAAA,MACf,CAAC,OAAQ,CAAA,GAAG,CAAC;AAAA,IAAA,CACd;AAED,aAAS,WAAW;AAClB,aAAO,MAAM,OAAQ,CAAA,IAAI,CAAA;AAAA,IAC3B;AAEA,aAAS,YAAYA,KAAqB;AACjC,aAAA,OAAO,MAAMA,GAAE;AAAA,IACxB;AAEA,aAAS,aAAa,GAAG;AACvB,UAAI,SAAU;AACR,YAAA,QAAQ,SAAS,MAAM,UAAU,CAAC,SAAS,KAAK,MAAM,EAAE,EAAE;AAChE,UAAI,SAAS,IAAI;AACN,iBAAA,MAAM,KAAK,CAAC;AAAA,MAAA,OAChB;AACI,iBAAA,MAAM,OAAO,OAAO,CAAC;AAAA,MAChC;AAAA,IACF;AAEA,QAAI,kBAAkB;AACtB,QAAI,WAAW,IAAuB;AAAA,MACpC,MAAM;AAAA,MACN,UAAU,CAAC;AAAA,IAAA,CACZ;AAED,aAAS,SAAS,gBAAgB;AAChC,sBAAgB,QAAQ;AAAA,IAC1B;AAEA,aAAS,WAAW,GAAG;AACd,aAAA,SAAS,MAAM,KAAK,CAAC,SAAS,KAAK,MAAM,EAAE,EAAE,MAAM;AAAA,IAC5D;AAEW,QAAI,cAAc,SAAS;AAAA,MACpC,WAAW;AAAA,IAAA,CACZ;AAED,QAAI,EAAE,MAAM,qBAAqB,WAAgB,CAAA,QAAA,SAAA,IAAAC,iBAAA,MAAA,OAAO,gBAAgB;AAAA,MACtE,QAAQ;AAAA,IAAA,GACV,aAAC,CAAA;AACD,UAAM,SAAS,OAAO;AAEtB,QAAI,UAAU;AACd,QAAI,QAAQ;AACN,UAAA,EAAE,MAAM,KAAA,KAAS,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM,OAAO,WAAW;AAAA,QAC3C,OAAO,EAAE,KAAK,GAAG;AAAA,MAAA,gBAClB,CAAA;AACS,gBAAA,KAAK,MAAM,SAAS,CAAC;AACtB,eAAA,QAAQ,QAAQ,WAAW;AACpC,UAAI,QAAQ,UAAU;AACpB,iBAAS,MAAM,SAAS,KAAK,QAAQ,QAAQ;AAC7C,wBAAgB,QAAQ,SAAS;AAAA,MACnC;AACA,aAAO,QAAQ,QAAQ;AAAA,IACzB;AAEA,QAAI,EAAE,MAAM,cAAmB,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,OAAO,6BAAc,CAAA;AAE9C,UAAA,sBAAsB,SACxB,oCACA;AACE,UAAA,QAAQ,WAAW,sBAAsB;AAE/C,QAAI,gBAAc,yBAAoB,UAApB,mBAA2B,gBAAe,CAAA;AACtD,UAAA,qBAAqB,SACvB,YAAY,KAAK,CAAC,SAAS,KAAK,MAAM,QAAQ,UAAU,IACxD;AAEJ,UAAM,oBAAoB,YAAY,IAAI,CAAC,gBAAgB;AAAA,MACzD,OAAO,WAAW;AAAA,MAClB,OAAO,WAAW;AAAA,IAClB,EAAA;AAEF,UAAM,YAAY;AAAA,MAChB,EAAE,OAAO,OAAO,OAAO,UAAU;AAAA,MACjC,EAAE,OAAO,OAAO,OAAO,QAAQ;AAAA,MAC/B,EAAE,OAAO,OAAO,OAAO,SAAS;AAAA,MAChC,EAAE,OAAO,OAAO,OAAO,SAAS;AAAA,IAAA;AAGlC,UAAM,2BAA2B;AAAA,MAC/B,EAAE,OAAO,aAAa,OAAO,YAAY;AAAA,MACzC,EAAE,OAAO,UAAU,OAAO,SAAS;AAAA,MACnC,EAAE,OAAO,iBAAiB,OAAO,iBAAiB;AAAA,MAClD,EAAE,OAAO,cAAc,OAAO,YAAY;AAAA,MAC1C,EAAE,OAAO,WAAW,OAAO,UAAU;AAAA,MACrC;AAAA,QACE,OAAO;AAAA,QACP,OAAO;AAAA,MACT;AAAA,MACA,EAAE,OAAO,eAAe,OAAO,sCAAsC;AAAA,IAAA;AAGnE,QAAA,EAAE,SAAS;AAEf,QAAI,aAAa;AAAA,MACf,EAAE,OAAO;AAAA,QACP,cAAc,EAAE,OAAA,EAAS,QAAQ,mCAAS,UAAU;AAAA,QACpD,aAAa,EAAE,OAAO;AAAA,UACpB,MAAM,EACH,MAAM;AAAA,YACL,EAAE,MAAM,CAAC,EAAE,OAAU,GAAA,EAAE,OAAO,GAAG,EAAE,OAAO,GAAG,EAAE,OAAQ,CAAA,CAAC;AAAA,YACxD,EAAE,MAAM;AAAA,cACN,EAAE,OAAO;AAAA,cACT,EAAE,OAAO;AAAA,cACT,EAAE,OAAO;AAAA,cACT,EAAE,OAAO;AAAA,cACT,EAAE,OAAO;AAAA,cACT,EAAE,OAAO;AAAA,YAAA,CACV;AAAA,UAAA,CACF,EACA,SAAS,EACT,SAAS;AAAA,UACZ,MAAM,EAAE,QAAQ,SAAS,EAAE,QAAQ,SAAS;AAAA;AAAA,UAE5C,UAAU,EACP,MAAM;AAAA,YACL,GAAG,QAAQ,MAAM;AAAA,YACjB,GAAG,QAAQ,WAAW;AAAA,YACtB,GAAG,QAAQ,WAAW;AAAA,YACtB,GAAG,QAAQ,gBAAgB;AAAA,YAC3B,GAAG,QAAQ,QAAQ;AAAA,YACnB,GAAG,QAAQ,aAAa;AAAA,YACxB,GAAG,QAAQ,mBAAmB;AAAA,UAC/B,CAAA,EACA,SAAS,EACT,QAAQ,IAAI;AAAA,UACf,YAAY,EACT,OAAO;AAAA,YACN,OAAO,EAAE,SAAS,QAAQ,mCAAS,WAAW,KAAK;AAAA,YACnD,eAAe,EAAE,SAAS,QAAQ,mCAAS,WAAW,aAAa;AAAA,YACnE,aAAa,EAAE,SAAS,QAAQ,mCAAS,WAAW,WAAW;AAAA,YAC/D,UAAU,EACP,OACA,EAAA,QAAQ,mCAAS,WAAW,QAAQ,EACpC,UAAU,CAAC,MAAM;AAChB,qBAAO,IAAI,KAAK,CAAC,EAAE,YAAY;AAAA,YAAA,CAChC;AAAA,YACH,wBAAwB,EACrB,SACA,QAAQ,mCAAS,WAAW,sBAAsB;AAAA,YACrD,0BAA0B,EACvB,SACA,QAAQ,mCAAS,WAAW,wBAAwB;AAAA,YACvD,sBAAsB,EAAE,SAAS,QAAQ,SAAS;AAAA,YAClD,UAAU,EAAE,OAAA,EAAS,SAAS,EAAE,QAAQ,aAAa;AAAA,YACrD,mBAAmB,EAChB,OAAA,EACA;AAAA,cACC,UAAU,QAAQ,WAAW,oBAAoB;AAAA,YACnD;AAAA,YACF,mBAAmB,EAChB,SACA,QAAQ,mCAAS,WAAW,iBAAiB;AAAA,YAChD,sBAAsB,EAAE,SAAS,QAAQ,WAAW;AAAA,YACpD,yBAAyB,EAAE,SAAS,QAAQ,OAAO;AAAA,YACnD,cAAc,EAAE,SAAS,QAAQ,WAAW;AAAA,YAC5C,UAAU,EACP,OAAO,EACP,QAAQ,UAAU,QAAQ,WAAW,WAAW,KAAK;AAAA,YACxD,gBAAgB,EAAE,SAAS,QAAQ,SAAS;AAAA,YAC5C,qBAAqB,EAClB,SACA,QAAQ,mCAAS,WAAW,mBAAmB;AAAA,YAClD,wBAAwB,EAAE,SAAS,QAAQ,YAAY;AAAA,YACvD,4BAA4B,EAAE,SAAS,QAAQ,UAAU;AAAA,YACzD,gCAAgC,EAAE,SAAS,QAAQ,UAAU;AAAA,YAC7D,yBAAyB,EAAE,SAAS,QAAQ,SAAS,MAAM,KAAK;AAAA,YAChE,4BAA4B,EAAE,SAAS,QAAQ,YAAY;AAAA,YAC3D,kBAAkB,EAAE,SAAS,QAAQ,KAAK;AAAA,YAC1C,kBAAkB,EAAE,KAAA,EAAO,QAAQ,oBAAI,MAAM;AAAA,YAC7C,SAAS,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,YACxC,SAAS,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,YACxC,gBAAgB,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,YAC/C,cAAc,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,YAC7C,SAAS,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,YACxC,WAAW,EACR;AAAA,cACC,EAAE,OAAO;AAAA,gBACP,MAAM,EAAE,OAAO;AAAA,gBACf,aAAa,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,gBAC5C,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS;AAAA,gBAC9C,KAAK,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,cAAA,CACrC;AAAA,YAAA,EAEF,SAAS,EACT,SAAS;AAAA,YACZ,eAAe,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,YAC9C,SAAS,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,YACxC,KAAK,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,UACrC,CAAA,EACA,YAAY;AAAA,UACf,IAAI,EAAE,OAAS,EAAA,QAAQ,QAAQ;AAAA,UAC/B,cAAc,EAAE,SAAS,QAAQ,OAAO;AAAA,UACxC,iBAAiB,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,WAAW,WAAW,QAAQ,CAAA,CAAE;AAAA,UACrE,QAAQ,EACL;AAAA,YACC,EAAE,OAAO;AAAA,cACP,MAAM,EAAE,OAAO;AAAA,cACf,MAAM,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,cACrC,OAAO,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,cACtC,aAAa,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,cAC5C,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS;AAAA,YAAA,CAChD;AAAA,UAAA,EAEF,QAAQ,OAAO,KAAK;AAAA,UACvB,OAAO,EACJ;AAAA,YACC,EAAE,OAAO;AAAA,cACP,MAAM,EAAE,OAAO;AAAA,cACf,KAAK,EAAE,OAAO;AAAA,cACd,MAAM,EACH,MAAM;AAAA,gBACL,EAAE,QAAQ,iCAAiC;AAAA,gBAC3C,EAAE;AAAA,kBACA;AAAA,gBACF;AAAA,gBACA,EAAE,QAAQ,WAAW;AAAA,gBACrB,EAAE,QAAQ,WAAW;AAAA,gBACrB,EAAE,QAAQ,YAAY;AAAA,gBACtB,EAAE,QAAQ,sBAAsB;AAAA,gBAChC,EAAE,QAAQ,gCAAgC;AAAA,gBAC1C,EAAE,QAAQ,sCAAsC;AAAA,gBAChD,EAAE,QAAQ,kCAAkC;AAAA,gBAC5C,EAAE,QAAQ,mBAAmB;AAAA,gBAC7B,EAAE,QAAQ,oBAAoB;AAAA,gBAC9B,EAAE,QAAQ,iBAAiB;AAAA,gBAC3B,EAAE,QAAQ,kBAAkB;AAAA,gBAC5B,EAAE,QAAQ,WAAW;AAAA,gBACrB,EAAE,QAAQ,YAAY;AAAA,gBACtB,EAAE,QAAQ,8CAA8C;AAAA,gBACxD,EAAE,QAAQ,yBAAyB;AAAA,cAAA,CACpC,EACA,SAAS,EACT,SAAS;AAAA,cACZ,OAAO,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,cACtC,gBAAgB,EAAE,OAAS,EAAA,SAAA,EAAW,SAAS;AAAA,YAAA,CAChD;AAAA,UAAA,EAEF,QAAQ,CAAE,CAAA,EACV,UAAU,CAAC,QAAQ,OAAO,OAAO,GAAG,CAAC;AAAA,QAAA,CACzC;AAAA;AAAA,MAAA,CAEF;AAAA,IAAA;AAGC,QAAA,EAAE,UAAU;AAEhB,QAAI,OAAO,QAAQ;AAAA,MACjB,kBAAkB;AAAA,IAAA,CACnB;AAEK,UAAA,iBAAiB,cAAc,YAAY;AAC/C,YAAM,eAAe,SAAS,QAAQ,aAAa,KAAK,OAAO;AACzD,YAAA,aAAa,MAAM,KAAK,gCAAgC;AAAA,QAC5D,MAAM;AAAA,UACJ,eAAe;AAAA,QACjB;AAAA,MAAA,CACD;AACK,YAAA,eAAe,WAAW,MAAM;AAAA,QACpC,CAAC,SAAU,KAAK,MAAoB,KAAK;AAAA,MAAA;AAE3C,YAAM,aAAa,aAAa;AACzB,aAAA,MAAM,KAAK,iBAAiB;AAAA,QACjC,OAAO;AAAA,UACL,aAAa;AAAA,QACf;AAAA,MAAA,CACD;AAAA,IACH,GAAG,CAAE,CAAA;AAEL,QAAI,WAAW,KAAK,aAAa,OAAO,WAAW;;AAC7C,UAAA;AACF,YAAI,MAAM;AACV,YAAI,OAAQ,OAAM,MAAM,MAAM,QAAQ;AAEtC,cAAM,UAAU;AAAA,UACd,GAAG,OAAO;AAAA,UACV,YAAY,SAAS,QAAQ,aAAa,OAAO;AAAA,QAAA;AAE3C,gBAAA,WAAW,WAAW,SAAS;AACvC,aAAIC,MAAA,gBAAgB,UAAhB,gBAAAA,IAAuB,SAAS,IAAI;AACtC,kBAAQ,aAAW,qBAAgB,UAAhB,mBAAuB,SAAS,GAAG,aAClD,qBAAgB,UAAhB,mBAAuB,SAAS,GAAG,WACnC,mCAAS;AAEb,kBAAQ,OAAO,QAAQ,WAAW,KAAK,QAAQ,QAAQ,IAAI;AAAA,QAC7D;AACI,YAAA,OAAO,MAAM,KAAK,KAAK;AAAA,UACzB,QAAQ,SAAS,QAAQ;AAAA,UACzB,MAAM;AAAA,UACN,SAAS;AAAA,YACP,gBAAgB;AAAA,UAClB;AAAA,UACA,MAAM;AAAA,YACJ,eAAe,OAAO;AAAA,UACxB;AAAA,QAAA,CACD;AAEK,cAAA;AAAA,UACJ,OAAO;AAAA,QAAA,CACR;AAGD,cAAM,WAAW,QAAQ;AAAA,eAClBC,QAAO;AACd,gBAAQ,IAAIA,MAAK;AACX,cAAA;AAAA,UACJ,OAAO;AAAA,UACP,SAAS;AAAA,QAAA,CACV;AAAA,MACH;AAAA,IAAA,CACD;AAEK,UAAA,KAAK,QAAQ,MAAM;AAAA,IAAA,CAAE;AAE3B,QAAI,gBAAgB,SAAS;AAAA,MAC3B,KAAK,MAAM;;AACF,iBAAA,MAAAD,MAAA,KAAK,OAAO,gBAAZ,gBAAAA,IAAyB,eAAzB,mBAAqC,YACxC,WAAU,gBAAK,OAAO,gBAAZ,mBAAyB,eAAzB,mBAAqC,QAAQ,IACvD;AAAA,MACN;AAAA,MACA,KAAK,CAAC,QAAQ;AAAA,IAAA,CACf;AAED,aAAS,iBAAiB;AACpB,UAAA,CAAC,cAAc,SAAS,QAAQ;AAClC,eAAO,WAAW,IAAI,KAAK,QAAQ,WAAW,QAAQ,GAAG,YAAY;AAAA,MACvE;AACO,aAAA,cAAc,QAAQ,cAAc,QAAQ;AAAA,IACrnames":["id","_withAsyncContext","_a","error"],"sources":["../../../../components/GeometryDraw.vue","../../../../components/ui/calendar/Calendar.vue","../../../../components/ui/calendar/CalendarCell.vue","../../../../components/ui/calendar/CalendarCellTrigger.vue","../../../../components/ui/calendar/CalendarGrid.vue","../../../../components/ui/calendar/CalendarGridBody.vue","../../../../components/ui/calendar/CalendarGridHead.vue","../../../../components/ui/calendar/CalendarGridRow.vue","../../../../components/ui/calendar/CalendarHeadCell.vue","../../../../components/ui/calendar/CalendarHeader.vue","../../../../components/ui/calendar/CalendarHeading.vue","../../../../components/ui/calendar/CalendarNextButton.vue","../../../../components/ui/calendar/CalendarPrevButton.vue","../../../../lib/spatialReferenceSystem.txt?raw","../../../../pages/items/[id].vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref } from \"vue\"\nimport { Map, Layers, Sources, Interactions, Styles } from \"vue3-openlayers\"\nimport { GeoJSON } from \"ol/format\"\nimport type { FeatureCollection } from \"geojson\"\nimport { Circle, MapPin, Pentagon, Spline, Trash2 } from \"lucide-vue-next\"\n\nlet geoJson = new GeoJSON()\n\nlet projection = ref(\"EPSG:4326\")\n\nlet { onValueChange, initialValue } = defineProps<{\n  onValueChange?: (newValue: FeatureCollection) => void\n  initialValue?: FeatureCollection\n  readOnly: Boolean\n}>()\n\nlet initialFeatures = geoJson.readFeatures(initialValue, {\n  featureProjection: \"EPSG:4326\",\n  dataProjection: \"EPSG:4326\",\n})\n\nlet center = ref([0, 0])\nlet zoom = ref(1)\n\nlet vectorRef = ref()\n\nlet drawEnable = ref(false)\nlet drawType = ref<\"Polygon\" | \"Point\" | \"Circle\">(\"Polygon\")\n\nlet drawend = (event) => {\n  let map = vectorRef.value.source\n  let allFeatures = map.getFeatures()\n  allFeatures.forEach((feature) => {\n    if (feature === event.feature) return\n    map.removeFeature(feature)\n  })\n  drawEnable.value = false\n}\n\nlet selectedFeature = ref()\n\nfunction featureSelected(event) {\n  selectedFeature.value = event.selected[0]\n}\n\nfunction onChange(event) {\n  let features = event.target.getFeatures()\n  let featureCollection = geoJson.writeFeaturesObject(features, {\n    dataProjection: \"EPSG:4326\",\n    featureProjection: \"EPSG:4326\",\n  })\n  onValueChange?.(featureCollection)\n}\n\ndocument.addEventListener(\"keydown\", (event) => {\n  if (event.key === \"Delete\" || event.key === \"Backspace\") {\n    removeSelectedFeature()\n  }\n})\n\nfunction removeSelectedFeature() {\n  let map = vectorRef.value.source\n  if (selectedFeature.value) {\n    map.removeFeature(selectedFeature.value)\n  }\n}\n\nfunction selectDrawType(type: \"Point\" | \"Polygon\" | \"Circle\") {\n  drawType.value = type\n  drawEnable.value = true\n}\n</script>\n\n<template>\n  <div class=\"relative\">\n    <div class=\"absolute top-0 right-0 z-10 p-3 flex flex-col gap-2\">\n      <div class=\"flex flex-col\">\n        <Button\n          v-if=\"!readOnly\"\n          variant=\"outline\"\n          size=\"icon\"\n          type=\"button\"\n          @click=\"() => selectDrawType('Point')\"\n          :class=\"{\n            'bg-gray-100': drawType === 'Point' && drawEnable,\n            'rounded-b-none': true,\n          }\"\n        >\n          <MapPin class=\"w-4 h-4\" />\n        </Button>\n\n        <!--        <Button-->\n        <!--          variant=\"outline\"-->\n        <!--          size=\"icon\"-->\n        <!--          type=\"button\"-->\n        <!--          @click=\"() => selectDrawType('Circle')\"-->\n        <!--          :class=\"{-->\n        <!--            'bg-gray-100': drawType === 'Circle' && drawEnable,-->\n        <!--            'rounded-none border-y-0': true,-->\n        <!--          }\"-->\n        <!--        >-->\n        <!--          <Circle class=\"w-4 h-4\" />-->\n        <!--        </Button>-->\n        <Button\n          v-if=\"!readOnly\"\n          variant=\"outline\"\n          size=\"icon\"\n          type=\"button\"\n          @click=\"() => selectDrawType('Polygon')\"\n          :class=\"{\n            'bg-gray-100': drawType === 'Polygon' && drawEnable,\n            'rounded-t-none': true,\n          }\"\n        >\n          <Spline class=\"w-4 h-4\" />\n        </Button>\n      </div>\n\n      <Button\n        v-if=\"selectedFeature\"\n        variant=\"outline\"\n        size=\"icon\"\n        type=\"button\"\n        @click=\"removeSelectedFeature\"\n      >\n        <Trash2 class=\"w-4 h-4\" />\n      </Button>\n    </div>\n\n    <Map.OlMap\n      class=\"rounded overflow-hidden aspect-[16/9] w-full\"\n      :loadTilesWhileAnimating=\"true\"\n      :loadTilesWhileInteracting=\"true\"\n    >\n      <Map.OlView\n        :projection=\"projection\"\n        :rotation=\"0\"\n        ref=\"view\"\n        :center=\"center\"\n        :zoom=\"zoom\"\n      />\n\n      <Layers.OlTileLayer>\n        <Sources.OlSourceOsm />\n      </Layers.OlTileLayer>\n\n      <Interactions.OlInteractionSelect\n        v-if=\"!drawEnable\"\n        @select=\"featureSelected\"\n      >\n        <Styles.OlStyle>\n          <Styles.OlStyleStroke color=\"blue\" :width=\"10\" />\n          <Styles.OlStyleFill color=\"rgba(255, 255, 255, 0.4)\" />\n          <Styles.OlStyleIcon>\n            <span class=\"w-5 h-5 bg-black/40 border-blue-500 border-[10px]\" />\n          </Styles.OlStyleIcon>\n        </Styles.OlStyle>\n      </Interactions.OlInteractionSelect>\n\n      <Layers.OlVectorLayer>\n        <Sources.OlSourceVector\n          ref=\"vectorRef\"\n          @change=\"onChange\"\n          :features=\"initialFeatures\"\n          :format=\"geoJson\"\n        >\n          <Interactions.OlInteractionDraw\n            v-if=\"drawEnable\"\n            :type=\"drawType\"\n            :stopClick=\"true\"\n            @drawend=\"drawend\"\n          >\n            <Styles.OlStyle>\n              <Styles.OlStyleStroke color=\"blue\" :width=\"2\" />\n              <Styles.OlStyleFill color=\"rgba(255, 255, 0, 0.4)\" />\n              <Styles.OlStyleCircle :radius=\"5\">\n                <Styles.OlStyleFill color=\"#00dd11\" />\n                <Styles.OlStyleStroke color=\"blue\" :width=\"2\" />\n              </Styles.OlStyleCircle>\n            </Styles.OlStyle>\n          </Interactions.OlInteractionDraw>\n        </Sources.OlSourceVector>\n\n        <Styles.OlStyle>\n          <Styles.OlStyleStroke color=\"red\" :width=\"2\"></Styles.OlStyleStroke>\n          <Styles.OlStyleFill\n            color=\"rgba(255,255,255,0.1)\"\n          ></Styles.OlStyleFill>\n          <Styles.OlStyleCircle :radius=\"7\">\n            <Styles.OlStyleFill color=\"red\"></Styles.OlStyleFill>\n          </Styles.OlStyleCircle>\n        </Styles.OlStyle>\n      </Layers.OlVectorLayer>\n    </Map.OlMap>\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport { type HTMLAttributes, computed } from 'vue'\nimport { CalendarRoot, type CalendarRootEmits, type CalendarRootProps, useForwardPropsEmits } from 'radix-vue'\nimport { CalendarCell, CalendarCellTrigger, CalendarGrid, CalendarGridBody, CalendarGridHead, CalendarGridRow, CalendarHeadCell, CalendarHeader, CalendarHeading, CalendarNextButton, CalendarPrevButton } from '.'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<CalendarRootProps & { class?: HTMLAttributes['class'] }>()\n\nconst emits = defineEmits<CalendarRootEmits>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\n</script>\n\n<template>\n  <CalendarRoot\n    v-slot=\"{ grid, weekDays }\"\n    :class=\"cn('p-3', props.class)\"\n    v-bind=\"forwarded\"\n  >\n    <CalendarHeader>\n      <CalendarPrevButton />\n      <CalendarHeading />\n      <CalendarNextButton />\n    </CalendarHeader>\n\n    <div class=\"flex flex-col gap-y-4 mt-4 sm:flex-row sm:gap-x-4 sm:gap-y-0\">\n      <CalendarGrid v-for=\"month in grid\" :key=\"month.value.toString()\">\n        <CalendarGridHead>\n          <CalendarGridRow>\n            <CalendarHeadCell\n              v-for=\"day in weekDays\" :key=\"day\"\n            >\n              {{ day }}\n            </CalendarHeadCell>\n          </CalendarGridRow>\n        </CalendarGridHead>\n        <CalendarGridBody>\n          <CalendarGridRow v-for=\"(weekDates, index) in month.rows\" :key=\"`weekDate-${index}`\" class=\"mt-2 w-full\">\n            <CalendarCell\n              v-for=\"weekDate in weekDates\"\n              :key=\"weekDate.toString()\"\n              :date=\"weekDate\"\n            >\n              <CalendarCellTrigger\n                :day=\"weekDate\"\n                :month=\"month.value\"\n              />\n            </CalendarCell>\n          </CalendarGridRow>\n        </CalendarGridBody>\n      </CalendarGrid>\n    </div>\n  </CalendarRoot>\n</template>\n","<script lang=\"ts\" setup>\nimport { type HTMLAttributes, computed } from 'vue'\nimport { CalendarCell, type CalendarCellProps, useForwardProps } from 'radix-vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<CalendarCellProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <CalendarCell\n    :class=\"cn('relative h-9 w-9 p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([data-selected])]:rounded-md [&:has([data-selected])]:bg-accent [&:has([data-selected][data-outside-month])]:bg-accent/50', props.class)\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </CalendarCell>\n</template>\n","<script lang=\"ts\" setup>\nimport { type HTMLAttributes, computed } from 'vue'\nimport { CalendarCellTrigger, type CalendarCellTriggerProps, useForwardProps } from 'radix-vue'\nimport { buttonVariants } from '@/components/ui/button'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<CalendarCellTriggerProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <CalendarCellTrigger\n    :class=\"cn(\n      buttonVariants({ variant: 'ghost' }),\n      'h-9 w-9 p-0 font-normal',\n      '[&[data-today]:not([data-selected])]:bg-accent [&[data-today]:not([data-selected])]:text-accent-foreground',\n      // Selected\n      'data-[selected]:bg-primary data-[selected]:text-primary-foreground data-[selected]:opacity-100 data-[selected]:hover:bg-primary data-[selected]:hover:text-primary-foreground data-[selected]:focus:bg-primary data-[selected]:focus:text-primary-foreground',\n      // Disabled\n      'data-[disabled]:text-muted-foreground data-[disabled]:opacity-50',\n      // Unavailable\n      'data-[unavailable]:text-destructive-foreground data-[unavailable]:line-through',\n      // Outside months\n      'data-[outside-month]:pointer-events-none data-[outside-month]:text-muted-foreground data-[outside-month]:opacity-50 [&[data-outside-month][data-selected]]:bg-accent/50 [&[data-outside-month][data-selected]]:text-muted-foreground [&[data-outside-month][data-selected]]:opacity-30',\n      props.class,\n    )\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </CalendarCellTrigger>\n</template>\n","<script lang=\"ts\" setup>\nimport { type HTMLAttributes, computed } from 'vue'\nimport { CalendarGrid, type CalendarGridProps, useForwardProps } from 'radix-vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<CalendarGridProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <CalendarGrid\n    :class=\"cn('w-full border-collapse space-y-1', props.class)\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </CalendarGrid>\n</template>\n","<script lang=\"ts\" setup>\nimport { CalendarGridBody, type CalendarGridBodyProps } from 'radix-vue'\n\nconst props = defineProps<CalendarGridBodyProps>()\n</script>\n\n<template>\n  <CalendarGridBody v-bind=\"props\">\n    <slot />\n  </CalendarGridBody>\n</template>\n","<script lang=\"ts\" setup>\nimport { CalendarGridHead, type CalendarGridHeadProps } from 'radix-vue'\n\nconst props = defineProps<CalendarGridHeadProps>()\n</script>\n\n<template>\n  <CalendarGridHead v-bind=\"props\">\n    <slot />\n  </CalendarGridHead>\n</template>\n","<script lang=\"ts\" setup>\nimport { type HTMLAttributes, computed } from 'vue'\nimport { CalendarGridRow, type CalendarGridRowProps, useForwardProps } from 'radix-vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<CalendarGridRowProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <CalendarGridRow :class=\"cn('flex', props.class)\" v-bind=\"forwardedProps\">\n    <slot />\n  </CalendarGridRow>\n</template>\n","<script lang=\"ts\" setup>\nimport { type HTMLAttributes, computed } from 'vue'\nimport { CalendarHeadCell, type CalendarHeadCellProps, useForwardProps } from 'radix-vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<CalendarHeadCellProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <CalendarHeadCell :class=\"cn('w-9 rounded-md text-[0.8rem] font-normal text-muted-foreground', props.class)\" v-bind=\"forwardedProps\">\n    <slot />\n  </CalendarHeadCell>\n</template>\n","<script lang=\"ts\" setup>\nimport { type HTMLAttributes, computed } from 'vue'\nimport { CalendarHeader, type CalendarHeaderProps, useForwardProps } from 'radix-vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<CalendarHeaderProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <CalendarHeader :class=\"cn('relative flex w-full items-center justify-between pt-1', props.class)\" v-bind=\"forwardedProps\">\n    <slot />\n  </CalendarHeader>\n</template>\n","<script lang=\"ts\" setup>\nimport { type HTMLAttributes, computed } from 'vue'\nimport { CalendarHeading, type CalendarHeadingProps, useForwardProps } from 'radix-vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<CalendarHeadingProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <CalendarHeading\n    v-slot=\"{ headingValue }\"\n    :class=\"cn('text-sm font-medium', props.class)\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot :heading-value>\n      {{ headingValue }}\n    </slot>\n  </CalendarHeading>\n</template>\n","<script lang=\"ts\" setup>\nimport { type HTMLAttributes, computed } from 'vue'\nimport { CalendarNext, type CalendarNextProps, useForwardProps } from 'radix-vue'\nimport { ChevronRight } from 'lucide-vue-next'\nimport { cn } from '@/lib/utils'\nimport { buttonVariants } from '@/components/ui/button'\n\nconst props = defineProps<CalendarNextProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <CalendarNext\n    :class=\"cn(\n      buttonVariants({ variant: 'outline' }),\n      'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100',\n      props.class,\n    )\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot>\n      <ChevronRight class=\"h-4 w-4\" />\n    </slot>\n  </CalendarNext>\n</template>\n","<script lang=\"ts\" setup>\nimport { type HTMLAttributes, computed } from 'vue'\nimport { CalendarPrev, type CalendarPrevProps, useForwardProps } from 'radix-vue'\nimport { ChevronLeft } from 'lucide-vue-next'\nimport { cn } from '@/lib/utils'\nimport { buttonVariants } from '@/components/ui/button'\n\nconst props = defineProps<CalendarPrevProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <CalendarPrev\n    :class=\"cn(\n      buttonVariants({ variant: 'outline' }),\n      'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100',\n      props.class,\n    )\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot>\n      <ChevronLeft class=\"h-4 w-4\" />\n    </slot>\n  </CalendarPrev>\n</template>\n","export default \"EPSG:28992\\nEPSG:4326\\nEPSG:3857\\nEPSG:25831\\nEPSG:25832\\nEPSG:3035\\nEPSG:3812\\nEPSG:5243\\nEPSG:4839\"","<script setup lang=\"ts\">\nimport { ref } from \"vue\"\nimport { cn } from \"@/lib/utils\"\nimport { nanoid } from \"nanoid\"\nimport \"../node_modules/mapbox-gl/dist/mapbox-gl.css\"\nimport { DateFormatter, parseDate } from \"@internationalized/date\"\nimport dateFormat from \"dateformat\"\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\"\nimport { Calendar } from \"@/components/ui/calendar\"\nimport { Button } from \"@/components/ui/button\"\nimport { PlusIcon } from \"@radix-icons/vue\"\nimport CustomDropDownComponent from \"@/components/CustomDropDownComponent.vue\"\nimport Container from \"~/components/deltares/Container.vue\"\nimport Textarea from \"~/components/ui/textarea/Textarea.vue\"\nimport { Calendar as CalendarIcon, XIcon } from \"lucide-vue-next\"\n\nimport { toTypedSchema } from \"@vee-validate/zod\"\nimport { z } from \"zod\"\nimport { zu } from \"@infra-blocks/zod-utils\"\nimport { FormField, FormItem } from \"~/components/ui/form\"\nimport { useForm } from \"vee-validate\"\nimport { useToast } from \"~/components/ui/toast\"\nimport { computedAsync } from \"@vueuse/core\"\nimport type { FeatureCollection } from \"geojson\"\nimport { bbox } from \"@turf/turf\"\nimport spatialReferenceSystemRaw from \"../../lib/spatialReferenceSystem.txt?raw\"\n\nconst route = useRoute()\nconst router = useRouter()\nconst id = route.params.id\n\nconst readOnly = route.query.readonly ? \"readonly\" : \"\"\nconst readOnlyTag = readOnly ? \"readOnly\" : undefined\n\nlet crsArray = spatialReferenceSystemRaw.split(\"\\n\")\nlet spatialReferenceSystem = crsArray.sort().map((item) => {\n  return { label: item, value: item }\n})\nspatialReferenceSystem.unshift({\n  label: \"not applicable\",\n  value: \"not applicable\",\n})\n\nlet keywords = ref([])\n\nlet assets = ref({\n  [nanoid()]: {},\n})\n\nfunction addAsset() {\n  assets.value[nanoid()] = {}\n}\n\nfunction removeAsset(id: string | number) {\n  delete assets.value[id]\n}\n\nfunction handleChange(e) {\n  if (readOnly) return\n  const index = keywords.value.findIndex((item) => item.id == e.id)\n  if (index == -1) {\n    keywords.value.push(e)\n  } else {\n    keywords.value.splice(index, 1)\n  }\n}\n\nlet updatedGeometry = ref<FeatureCollection>()\nlet geometry = ref<FeatureCollection>({\n  type: \"FeatureCollection\",\n  features: [],\n})\n\nfunction setValue(updateGeometry) {\n  updatedGeometry.value = updateGeometry\n}\n\nfunction isSelected(e) {\n  return keywords.value.find((item) => item.id == e.id) !== undefined\n}\n\nconst df = new DateFormatter(\"en-US\", {\n  dateStyle: \"long\",\n})\n\nlet { data: collectionsResponse, error } = await useApi(\"/collections\", {\n  server: true,\n})\nconst update = id !== \"create\"\n\nlet feature = null\nif (update) {\n  let { data: item } = await useApi(\"/search\", {\n    query: { ids: id },\n  })\n  feature = item.value.features[0]\n  keywords.value = feature.properties.keywords\n  if (feature.geometry) {\n    geometry.value.features.push(feature.geometry)\n    updatedGeometry.value = geometry.value\n  }\n  assets.value = feature.assets\n}\n\nlet { data: userData } = await useApi(\"/api/auth/me\")\n\nconst createOrUpdateTitle = update\n  ? \"Update an existing registration\"\n  : \"Register a new item\"\nconst title = readOnly ? \"View registration\" : createOrUpdateTitle\n\nlet collections = collectionsResponse.value?.collections ?? []\nconst selectedCollection = update\n  ? collections.find((item) => item.id == feature.collection)\n  : null\n\nconst collectionOptions = collections.map((collection) => ({\n  value: collection.id,\n  label: collection.description,\n}))\n\nconst languages = [\n  { value: \"eng\", label: \"English\" },\n  { value: \"dut\", label: \"Dutch\" },\n  { value: \"ger\", label: \"German\" },\n  { value: \"fre\", label: \"French\" },\n]\n\nconst legalRestrictionsOptions = [\n  { value: \"copyright\", label: \"copyright\" },\n  { value: \"patent\", label: \"patent\" },\n  { value: \"patentPending\", label: \"patent pending\" },\n  { value: \"trademark \", label: \"trademark\" },\n  { value: \"license\", label: \"license\" },\n  {\n    value: \"intellectualPropertyRights \",\n    label: \"intellectual property rights\",\n  },\n  { value: \"restricted \", label: \"Prohibition of distribution and use\" },\n]\n\nlet { $api } = useNuxtApp()\n\nlet formSchema = toTypedSchema(\n  z.object({\n    collectionId: z.string().default(feature?.collection),\n    requestBody: z.object({\n      bbox: z\n        .union([\n          z.tuple([z.number(), z.number(), z.number(), z.number()]),\n          z.tuple([\n            z.number(),\n            z.number(),\n            z.number(),\n            z.number(),\n            z.number(),\n            z.number(),\n          ]),\n        ])\n        .nullable()\n        .optional(),\n      type: z.literal(\"Feature\").default(\"Feature\"),\n      // TODO: Fix any type to the complicated geometry type. Perhaps using turf.js or something\n      geometry: z\n        .union([\n          zu.geojson.point(),\n          zu.geojson.multiPoint(),\n          zu.geojson.lineString(),\n          zu.geojson.multiLineString(),\n          zu.geojson.polygon(),\n          zu.geojson.multiPolygon(),\n          zu.geojson.geometryCollection(),\n        ])\n        .nullable()\n        .default(null),\n      properties: z\n        .object({\n          title: z.string().default(feature?.properties.title),\n          projectNumber: z.string().default(feature?.properties.projectNumber),\n          description: z.string().default(feature?.properties.description),\n          datetime: z\n            .string()\n            .default(feature?.properties.datetime)\n            .transform((v) => {\n              return new Date(v).toISOString()\n            }),\n          spatialReferenceSystem: z\n            .string()\n            .default(feature?.properties.spatialReferenceSystem),\n          dataQualityInfoStatement: z\n            .string()\n            .default(feature?.properties.dataQualityInfoStatement),\n          dataQualityInfoScore: z.string().default(\"dataSet\"),\n          dateType: z.string().optional().default(\"publication\"),\n          legalRestrictions: z\n            .string()\n            .default(\n              feature ? feature.properties.legalRestrictions : \"license\",\n            ),\n          restrictionsOfUse: z\n            .string()\n            .default(feature?.properties.restrictionsOfUse),\n          metadataStandardName: z.string().default(\"ISO 19115\"),\n          metadataStandardVersion: z.string().default(\"2.1.0\"),\n          progressCode: z.string().default(\"completed\"),\n          language: z\n            .string()\n            .default(feature ? feature.properties.language : \"eng\"),\n          hierarchyLevel: z.string().default(\"dataSet\"),\n          originatorDataEmail: z\n            .string()\n            .default(feature?.properties.originatorDataEmail),\n          originatorDataRoleCode: z.string().default(\"originator\"),\n          originatorDataOrganisation: z.string().default(\"Deltares\"),\n          originatorMetaDataOrganisation: z.string().default(\"Deltares\"),\n          originatorMetaDataEmail: z.string().default(userData.value.email),\n          originatorMetaDataRoleCode: z.string().default(\"originator\"),\n          metaDataLanguage: z.string().default(\"eng\"),\n          metaDataDateTime: z.date().default(new Date()),\n          created: z.string().nullable().optional(),\n          updated: z.string().nullable().optional(),\n          start_datetime: z.string().nullable().optional(),\n          end_datetime: z.string().nullable().optional(),\n          license: z.string().nullable().optional(),\n          providers: z\n            .array(\n              z.object({\n                name: z.string(),\n                description: z.string().nullable().optional(),\n                role: z.array(z.string()).nullable().optional(),\n                url: z.string().nullable().optional(),\n              }),\n            )\n            .nullable()\n            .optional(),\n          constellation: z.string().nullable().optional(),\n          mission: z.string().nullable().optional(),\n          gsd: z.number().nullable().optional(),\n        })\n        .passthrough(),\n      id: z.string().default(nanoid()),\n      stac_version: z.string().default(\"1.0.0\"),\n      stac_extensions: z.array(z.string()).nullable().optional().default([]),\n      assets: z\n        .record(\n          z.object({\n            href: z.string(),\n            type: z.string().nullable().optional(),\n            title: z.string().nullable().optional(),\n            description: z.string().nullable().optional(),\n            roles: z.array(z.string()).nullable().optional(),\n          }),\n        )\n        .default(assets.value),\n      links: z\n        .record(\n          z.object({\n            href: z.string(),\n            rel: z.string(),\n            type: z\n              .union([\n                z.literal(\"image/tiff; application=geotiff\"),\n                z.literal(\n                  \"image/tiff; application=geotiff; profile=cloud-optimized\",\n                ),\n                z.literal(\"image/jp2\"),\n                z.literal(\"image/png\"),\n                z.literal(\"image/jpeg\"),\n                z.literal(\"application/geo+json\"),\n                z.literal(\"application/geopackage+sqlite3\"),\n                z.literal(\"application/vnd.google-earth.kml+xml\"),\n                z.literal(\"application/vnd.google-earth.kmz\"),\n                z.literal(\"application/x-hdf\"),\n                z.literal(\"application/x-hdf5\"),\n                z.literal(\"application/xml\"),\n                z.literal(\"application/json\"),\n                z.literal(\"text/html\"),\n                z.literal(\"text/plain\"),\n                z.literal(\"application/vnd.oai.openapi+json;version=3.0\"),\n                z.literal(\"application/schema+json\"),\n              ])\n              .nullable()\n              .optional(),\n            title: z.string().nullable().optional(),\n            \"label:assets\": z.string().nullable().optional(),\n          }),\n        )\n        .default({})\n        .transform((val) => Object.values(val)),\n    }),\n    // TODO: extract type\n  }) satisfies z.ZodType<any>,\n)\n\nlet { toast } = useToast()\n\nlet form = useForm({\n  validationSchema: formSchema,\n})\n\nconst keywordsGroups = computedAsync(async () => {\n  const collectionId = update ? feature.collection : form.values.collectionId\n  const collection = await $api(\"/collections/{collection_id}\", {\n    path: {\n      collection_id: collectionId,\n    },\n  })\n  const keywordsLink = collection.links.find(\n    (item) => (item.rel = \"keywords\" && item.id),\n  )\n  const facilityId = keywordsLink.id\n  return await $api(\"/api/keywords\", {\n    query: {\n      facility_id: facilityId,\n    },\n  })\n}, [])\n\nlet onSubmit = form.handleSubmit(async (values) => {\n  try {\n    let url = \"/collections/{collection_id}/items\"\n    if (update) url = url + \"/\" + feature.id\n\n    const newItem = {\n      ...values.requestBody,\n      collection: update ? feature.collection : values.collectionId,\n    }\n    newItem.properties.keywords = keywords.value\n    if (updatedGeometry.value?.features[0]) {\n      newItem.geometry = updatedGeometry.value?.features[0].geometry\n        ? updatedGeometry.value?.features[0].geometry\n        : feature?.geometry\n\n      newItem.bbox = newItem.geometry ? bbox(newItem.geometry) : undefined\n    }\n    let data = await $api(url, {\n      method: update ? \"put\" : \"post\",\n      body: newItem,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      path: {\n        collection_id: values.collectionId,\n      },\n    })\n\n    toast({\n      title: \"Data registered successfully\",\n    })\n\n    // TODO: data is typed unknown\n    await navigateTo(`/items`)\n  } catch (error) {\n    console.log(error)\n    toast({\n      title: \"Something went wrong!\",\n      variant: \"destructive\",\n    })\n  }\n})\n\nwatch(form.errors, () => {})\n\nlet datetimeValue = computed({\n  get: () => {\n    return form.values.requestBody?.properties?.datetime\n      ? parseDate(form.values.requestBody?.properties?.datetime)\n      : undefined\n  },\n  set: (val) => val,\n})\n\nfunction getDisplayTime() {\n  if (!datetimeValue.value && update) {\n    return dateFormat(new Date(feature.properties.datetime), \"yyyy-mm-dd\")\n  }\n  return datetimeValue.value ? datetimeValue.value : \"Pick a date\"\n}\n</script>\n\n<template>\n  <Container class=\"py-8\">\n    <h1 class=\"text-3xl flex font-semibold\">{{ title }}</h1>\n    <form @submit=\"onSubmit\">\n      <FormField name=\"requestBody.type\">\n        <FormControl>\n          <input type=\"hidden\" name=\"requestBody.type\" value=\"Feature\" />\n        </FormControl>\n      </FormField>\n      <div class=\"mt-8 grid grid-flow-row gap-5\">\n        <Card>\n          <CardHeader>\n            <CardTitle class=\"text-lg\">Data set collection</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <FormField v-slot=\"{ componentField }\" name=\"collectionId\">\n              <FormItem class=\"flex flex-col gap-1\">\n                <FormLabel>Collection</FormLabel>\n                <FormLabel v-if=\"update\"\n                  >{{ selectedCollection?.description }}\n                </FormLabel>\n                <FormControl v-if=\"!update\">\n                  <CustomDropDownComponent\n                    :options=\"collectionOptions\"\n                    v-bind=\"componentField\"\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            </FormField>\n          </CardContent>\n        </Card>\n\n        <Card v-if=\"update || form.values.collectionId\">\n          <CardHeader>\n            <CardTitle class=\"text-lg\">General information</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div class=\"max-w-196 flex flex-col gap-5\">\n              <FormField\n                v-slot=\"{ componentField }\"\n                name=\"requestBody.properties.projectNumber\"\n              >\n                <FormItem>\n                  <FormLabel>Project number</FormLabel>\n                  <FormControl>\n                    <Input\n                      :readonly=\"readOnlyTag\"\n                      type=\"text\"\n                      v-bind=\"componentField\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              </FormField>\n\n              <FormField\n                v-slot=\"{ componentField }\"\n                name=\"requestBody.properties.title\"\n              >\n                <FormItem>\n                  <FormLabel>Project title</FormLabel>\n                  <FormControl>\n                    <Input\n                      :readonly=\"readOnlyTag\"\n                      type=\"text\"\n                      v-bind=\"componentField\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              </FormField>\n\n              <FormField name=\"requestBody.properties.datetime\">\n                <FormItem class=\"flex flex-col\">\n                  <FormLabel>\n                    <NuxtLink\n                      target=\"_blank\"\n                      external\n                      to=\"https://docs.geostandaarden.nl/md/mdprofiel-iso19115/#datum-type-van-de-bron\"\n                      >Publication date</NuxtLink\n                    ></FormLabel\n                  >\n                  <Popover>\n                    <PopoverTrigger as-child>\n                      <FormControl>\n                        <Button\n                          v-if=\"!readOnly\"\n                          variant=\"outline\"\n                          :class=\"\n                            cn(\n                              'w-[240px] ps-3 text-start font-normal',\n                              !datetimeValue && 'text-muted-foreground',\n                            )\n                          \"\n                        >\n                          <span>{{ getDisplayTime() }}</span>\n                          <CalendarIcon class=\"ms-auto h-4 w-4 opacity-50\" />\n                        </Button>\n                        <Label v-if=\"readOnly\">{{ getDisplayTime() }}</Label>\n                        <input hidden />\n                      </FormControl>\n                    </PopoverTrigger>\n                    <PopoverContent class=\"w-auto p-0\">\n                      <Calendar\n                        v-model=\"datetimeValue\"\n                        calendar-label=\"Date\"\n                        initial-focus\n                        @update:model-value=\"\n                          (v) => {\n                            if (v) {\n                              form.setFieldValue(\n                                'requestBody.properties.datetime',\n                                v.toString(),\n                              )\n                            } else {\n                              form.setFieldValue(\n                                'requestBody.properties.datetime',\n                                undefined,\n                              )\n                            }\n                          }\n                        \"\n                      />\n                    </PopoverContent>\n                  </Popover>\n                  <FormMessage />\n                </FormItem>\n              </FormField>\n\n              <FormField\n                v-slot=\"{ componentField }\"\n                name=\"requestBody.properties.description\"\n              >\n                <FormItem>\n                  <FormLabel>Description</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      :readonly=\"readOnlyTag\"\n                      type=\"text\"\n                      v-bind=\"componentField\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              </FormField>\n              <FormField\n                v-slot=\"{ componentField }\"\n                name=\"requestBody.properties.language\"\n              >\n                <FormItem class=\"flex flex-col gap-1\">\n                  <FormLabel>Language</FormLabel>\n                  <CustomDropDownComponent\n                    v-if=\"!readOnly\"\n                    :options=\"languages\"\n                    v-bind=\"componentField\"\n                  />\n                  <FormControl></FormControl>\n                  <FormMessage />\n                </FormItem>\n              </FormField>\n              <FormField\n                v-slot=\"{ componentField }\"\n                name=\"requestBody.properties.legalRestrictions\"\n              >\n                <FormItem class=\"flex flex-col gap-1\">\n                  <div>\n                    <FormLabel>\n                      <NuxtLink\n                        target=\"_blank\"\n                        external\n                        to=\"https://docs.geostandaarden.nl/md/mdprofiel-iso19115/#juridische-toegangsrestricties\"\n                        >Legal restrictions</NuxtLink\n                      >\n                    </FormLabel>\n                  </div>\n                  <CustomDropDownComponent\n                    v-if=\"!readOnly\"\n                    :options=\"legalRestrictionsOptions\"\n                    v-bind=\"componentField\"\n                  />\n                  <FormControl></FormControl>\n                  <FormMessage />\n                </FormItem>\n              </FormField>\n              <FormField\n                v-slot=\"{ componentField }\"\n                name=\"requestBody.properties.restrictionsOfUse\"\n              >\n                <FormItem class=\"flex flex-col\">\n                  <div class=\"flex items-start\">\n                    <FormLabel>\n                      <NuxtLink\n                        target=\"_blank\"\n                        external\n                        to=\"https://docs.geostandaarden.nl/md/mdprofiel-iso19115/#gebruiksbeperkingen\"\n                        >Applications for which this data set is not\n                        suitable</NuxtLink\n                      >\n                    </FormLabel>\n                  </div>\n                  <Textarea\n                    :readonly=\"readOnlyTag\"\n                    type=\"text\"\n                    v-bind=\"componentField\"\n                  />\n                  <FormControl></FormControl>\n                  <FormMessage />\n                </FormItem>\n              </FormField>\n              <FormField\n                v-slot=\"{ componentField }\"\n                name=\"requestBody.properties.spatialReferenceSystem\"\n              >\n                <FormItem class=\"flex flex-col gap-1\">\n                  <FormLabel\n                    >Spatial reference system (choose one from the list or\n                    define a custom one)</FormLabel\n                  >\n                  <div class=\"flex flex-row space-x-4\">\n                    <CustomDropDownComponent\n                      :options=\"spatialReferenceSystem\"\n                      v-bind=\"componentField\"\n                    />\n                    <Input\n                      :readonly=\"readOnlyTag\"\n                      type=\"text\"\n                      v-bind=\"componentField\"\n                    />\n                  </div>\n                  <FormControl></FormControl>\n                  <FormMessage />\n                </FormItem>\n              </FormField>\n            </div>\n          </CardContent>\n        </Card>\n        <Card v-if=\"update || form.values.collectionId\">\n          <CardHeader>\n            <CardTitle class=\"text-lg\">Data quality</CardTitle>\n            <CardContent>\n              <FormField\n                v-slot=\"{ componentField }\"\n                name=\"requestBody.properties.dataQualityInfoStatement\"\n              >\n                <FormItem>\n                  <FormLabel>\n                    <NuxtLink\n                      target=\"_blank\"\n                      external\n                      to=\"https://docs.geostandaarden.nl/md/mdprofiel-iso19115/#algemene-beschrijving-herkomst\"\n                      >Description of the origin of this data set</NuxtLink\n                    >\n                  </FormLabel>\n                  <FormControl>\n                    <Textarea\n                      :readonly=\"readOnlyTag\"\n                      type=\"text\"\n                      v-bind=\"componentField\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              </FormField>\n            </CardContent>\n          </CardHeader>\n        </Card>\n        <Card v-if=\"update || form.values.collectionId\">\n          <CardHeader>\n            <CardTitle class=\"text-lg\">Originator data set</CardTitle>\n            <CardContent>\n              <FormField\n                v-slot=\"{ componentField }\"\n                name=\"requestBody.properties.originatorDataOrganisation\"\n              >\n                <FormItem>\n                  <FormLabel>Organisation</FormLabel>\n                  <FormControl>\n                    <Input\n                      :readonly=\"readOnlyTag\"\n                      type=\"text\"\n                      v-bind=\"componentField\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              </FormField>\n\n              <FormField\n                v-slot=\"{ componentField }\"\n                name=\"requestBody.properties.originatorDataEmail\"\n              >\n                <FormItem>\n                  <FormLabel>E-mail</FormLabel>\n                  <FormControl>\n                    <Input\n                      :readonly=\"readOnlyTag\"\n                      type=\"text\"\n                      v-bind=\"componentField\"\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              </FormField>\n            </CardContent>\n          </CardHeader>\n        </Card>\n        <Card v-if=\"update || form.values.collectionId\">\n          <CardHeader>\n            <CardTitle class=\"text-lg\">Originator meta data</CardTitle>\n            <CardContent>\n              <FormField\n                v-slot=\"{ componentField }\"\n                name=\"requestBody.properties.originatorMetaDataOrganisation\"\n              >\n                <FormItem>\n                  <FormLabel>Organisation</FormLabel>\n                  <FormControl>\n                    <Input readonly type=\"text\" v-bind=\"componentField\" />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              </FormField>\n              <FormField\n                v-slot=\"{ componentField }\"\n                name=\"requestBody.properties.originatorMetaDataEmail\"\n              >\n                <FormItem>\n                  <FormLabel>E-mail</FormLabel>\n                  <FormControl>\n                    <Input readonly type=\"text\" v-bind=\"componentField\" />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              </FormField>\n            </CardContent>\n          </CardHeader>\n        </Card>\n        <Card v-if=\"update || form.values.collectionId\">\n          <CardHeader>Geometry</CardHeader>\n          <CardContent>\n            <div class=\"container mx-auto\">\n              <ClientOnly>\n                <GeometryDraw\n                  :read-only=\"readOnly != ''\"\n                  :initialValue=\"geometry\"\n                  @valueChange=\"setValue\"\n                />\n              </ClientOnly>\n            </div>\n          </CardContent>\n        </Card>\n        <div class=\"grid grid-cols-3 gap-1\">\n          <Card v-for=\"group in keywordsGroups\">\n            <CardHeader>\n              <CardTitle class=\"text-lg\">{{ group.group_name_en }}</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <FormField\n                v-for=\"item in group.keywords\"\n                v-slot=\"{ value }\"\n                :key=\"item\"\n                type=\"checkbox\"\n                :value=\"item.nl_keyword\"\n                :ch\n                :unchecked-value=\"false\"\n                name=\"items\"\n              >\n                <FormItem class=\"flex flex-row items-start space-x-3 space-y-0\">\n                  <FormControl>\n                    <Checkbox\n                      @update:checked=\"handleChange(item)\"\n                      :checked=\"isSelected(item)\"\n                    />\n                  </FormControl>\n                  <FormLabel class=\"font-normal\">\n                    {{ item.nl_keyword }}\n                  </FormLabel>\n                  <FormMessage />\n                </FormItem>\n              </FormField>\n            </CardContent>\n          </Card>\n        </div>\n        <div>\n          <Card v-if=\"update || form.values.collectionId\">\n            <CardHeader>\n              <div class=\"flex items-center justify-between space-x-4 px-4\">\n                <CardTitle>Storage location data set</CardTitle>\n              </div>\n            </CardHeader>\n\n            <CardContent>\n              <div class=\"flex flex-col\">\n                <div\n                  v-for=\"(_asset, id) in assets\"\n                  class=\"border-b border-border last:border-none flex flex-col gap-3 pb-8 pt-6\"\n                >\n                  <FormField\n                    v-slot=\"{ componentField }\"\n                    :name=\"`requestBody.assets.${id}.title`\"\n                  >\n                    <FormItem>\n                      <FormLabel>Title</FormLabel>\n                      <FormControl>\n                        <Input type=\"text\" v-bind=\"componentField\" />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  </FormField>\n                  <FormField\n                    v-slot=\"{ componentField }\"\n                    :name=\"`requestBody.assets.${id}.description`\"\n                  >\n                    <FormItem>\n                      <FormLabel>Description</FormLabel>\n                      <FormControl>\n                        <Input type=\"text\" v-bind=\"componentField\" />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  </FormField>\n                  <FormField\n                    v-slot=\"{ componentField }\"\n                    :name=\"`requestBody.assets.${id}.href`\"\n                  >\n                    <FormItem>\n                      <FormLabel>Link</FormLabel>\n                      <FormControl>\n                        <Input type=\"text\" v-bind=\"componentField\" />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  </FormField>\n                  <FormField\n                    v-slot=\"{ componentField }\"\n                    :name=\"`requestBody.assets.${id}.type`\"\n                  >\n                    <FormItem>\n                      <FormLabel>Type</FormLabel>\n                      <FormControl>\n                        <Input type=\"text\" v-bind=\"componentField\" />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  </FormField>\n\n                  <Button\n                    v-if=\"!readOnly\"\n                    type=\"button\"\n                    @click=\"removeAsset(id)\"\n                    variant=\"outline\"\n                  >\n                    <XIcon class=\"w-4 h-4 mr-2\" />\n                    Remove\n                  </Button>\n                </div>\n              </div>\n              <div>\n                <Button\n                  v-if=\"!readOnly\"\n                  @click=\"addAsset\"\n                  variant=\"outline\"\n                  class=\"mt-5\"\n                  type=\"button\"\n                >\n                  <PlusIcon class=\"w-4 h-4 mr-2\" />\n                  Add\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n      <div class=\"flex justify-between px-6 pb-6 mt-4\">\n        <Button v-if=\"!readOnly\" as-child variant=\"outline\">\n          <NuxtLink to=\"/items\">Cancel</NuxtLink>\n        </Button>\n        <Button\n          v-if=\"readOnly\"\n          variant=\"outline\"\n          @click.stop.prevent=\"$router.back()\"\n          >Back to search\n        </Button>\n        <Button\n          type=\"submit\"\n          v-if=\"!readOnly && (update || form.values.collectionId)\"\n          >Publish project data\n        </Button>\n      </div>\n    </form>\n  </Container>\n</template>\n\n<style></style>\n"],"version":3}