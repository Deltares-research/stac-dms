{"version":3,"file":"index-DZwlCMii.js","sources":["../../../../components/ui/range-calendar/RangeCalendarCell.vue","../../../../components/ui/range-calendar/RangeCalendarCellTrigger.vue","../../../../components/ui/range-calendar/RangeCalendarGrid.vue","../../../../components/ui/range-calendar/RangeCalendarGridBody.vue","../../../../components/ui/range-calendar/RangeCalendarGridHead.vue","../../../../components/ui/range-calendar/RangeCalendarGridRow.vue","../../../../components/ui/range-calendar/RangeCalendarHeadCell.vue","../../../../components/DateRangePicker.vue","../../../../components/keywords/KeywordsCombobox.vue","../../../../components/collections/CollectionCombobox.vue","../../../../pages/index.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { type HTMLAttributes, computed } from 'vue'\nimport { RangeCalendarCell, type RangeCalendarCellProps, useForwardProps } from 'radix-vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<RangeCalendarCellProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <RangeCalendarCell\n    :class=\"cn('relative h-9 w-9 p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([data-selected])]:bg-accent first:[&:has([data-selected])]:rounded-l-md last:[&:has([data-selected])]:rounded-r-md [&:has([data-selected][data-outside-month])]:bg-accent/50 [&:has([data-selected][data-selection-end])]:rounded-r-md [&:has([data-selected][data-selection-start])]:rounded-l-md', props.class)\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </RangeCalendarCell>\n</template>\n","<script lang=\"ts\" setup>\nimport { type HTMLAttributes, computed } from 'vue'\nimport { RangeCalendarCellTrigger, type RangeCalendarCellTriggerProps, useForwardProps } from 'radix-vue'\nimport { buttonVariants } from '@/components/ui/button'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<RangeCalendarCellTriggerProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <RangeCalendarCellTrigger\n    :class=\"cn(\n      buttonVariants({ variant: 'ghost' }),\n      'h-9 w-9 p-0 font-normal data-[selected]:opacity-100',\n      '[&[data-today]:not([data-selected])]:bg-accent [&[data-today]:not([data-selected])]:text-accent-foreground',\n      // Selection Start\n      'data-[selection-start]:bg-primary data-[selection-start]:text-primary-foreground data-[selection-start]:hover:bg-primary data-[selection-start]:hover:text-primary-foreground data-[selection-start]:focus:bg-primary data-[selection-start]:focus:text-primary-foreground',\n      // Selection End\n      'data-[selection-end]:bg-primary data-[selection-end]:text-primary-foreground data-[selection-end]:hover:bg-primary data-[selection-end]:hover:text-primary-foreground data-[selection-end]:focus:bg-primary data-[selection-end]:focus:text-primary-foreground',\n      // Outside months\n      'data-[outside-month]:pointer-events-none data-[outside-month]:text-muted-foreground data-[outside-month]:opacity-50 [&[data-outside-month][data-selected]]:bg-accent/50 [&[data-outside-month][data-selected]]:text-muted-foreground [&[data-outside-month][data-selected]]:opacity-30',\n      // Disabled\n      'data-[disabled]:text-muted-foreground data-[disabled]:opacity-50',\n      // Unavailable\n      'data-[unavailable]:text-destructive-foreground data-[unavailable]:line-through',\n      props.class,\n    )\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </RangeCalendarCellTrigger>\n</template>\n","<script lang=\"ts\" setup>\nimport { type HTMLAttributes, computed } from 'vue'\nimport { RangeCalendarGrid, type RangeCalendarGridProps, useForwardProps } from 'radix-vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<RangeCalendarGridProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <RangeCalendarGrid\n    :class=\"cn('w-full border-collapse space-y-1', props.class)\"\n    v-bind=\"forwardedProps\"\n  >\n    <slot />\n  </RangeCalendarGrid>\n</template>\n","<script lang=\"ts\" setup>\nimport { RangeCalendarGridBody, type RangeCalendarGridBodyProps } from 'radix-vue'\n\nconst props = defineProps<RangeCalendarGridBodyProps>()\n</script>\n\n<template>\n  <RangeCalendarGridBody v-bind=\"props\">\n    <slot />\n  </RangeCalendarGridBody>\n</template>\n","<script lang=\"ts\" setup>\nimport { RangeCalendarGridHead, type RangeCalendarGridHeadProps } from 'radix-vue'\n\nconst props = defineProps<RangeCalendarGridHeadProps>()\n</script>\n\n<template>\n  <RangeCalendarGridHead v-bind=\"props\">\n    <slot />\n  </RangeCalendarGridHead>\n</template>\n","<script lang=\"ts\" setup>\nimport { type HTMLAttributes, computed } from 'vue'\nimport { RangeCalendarGridRow, type RangeCalendarGridRowProps, useForwardProps } from 'radix-vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<RangeCalendarGridRowProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <RangeCalendarGridRow :class=\"cn('flex mt-2 w-full', props.class)\" v-bind=\"forwardedProps\">\n    <slot />\n  </RangeCalendarGridRow>\n</template>\n","<script lang=\"ts\" setup>\nimport { type HTMLAttributes, computed } from 'vue'\nimport { RangeCalendarHeadCell, type RangeCalendarHeadCellProps, useForwardProps } from 'radix-vue'\nimport { cn } from '@/lib/utils'\n\nconst props = defineProps<RangeCalendarHeadCellProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n\nconst forwardedProps = useForwardProps(delegatedProps)\n</script>\n\n<template>\n  <RangeCalendarHeadCell :class=\"cn('w-8 rounded-md text-[0.8rem] font-normal text-muted-foreground', props.class)\" v-bind=\"forwardedProps\">\n    <slot />\n  </RangeCalendarHeadCell>\n</template>\n","<script setup lang=\"ts\">\nimport { type Ref, ref, watch } from \"vue\"\n\nimport {\n  Calendar as CalendarIcon,\n  ChevronLeft,\n  ChevronRight,\n} from \"lucide-vue-next\"\nimport {\n  CalendarDate,\n  type DateValue,\n  isEqualMonth,\n} from \"@internationalized/date\"\n\nimport { type DateRange, RangeCalendarRoot, useDateFormatter } from \"radix-vue\"\nimport { type Grid, createMonth, toDate } from \"radix-vue/date\"\nimport {\n  RangeCalendarCell,\n  RangeCalendarCellTrigger,\n  RangeCalendarGrid,\n  RangeCalendarGridBody,\n  RangeCalendarGridHead,\n  RangeCalendarGridRow,\n  RangeCalendarHeadCell,\n} from \"@/components/ui/range-calendar\"\nimport { Button, buttonVariants } from \"@/components/ui/button\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\"\nimport { cn } from \"~/lib/utils\"\n\nconst emit = defineEmits<{\n  (event: \"update:modelValue\", payload: DateRange): void\n}>()\n\nconst value = ref({\n  start: new CalendarDate(2019, 1, 1),\n  end: new CalendarDate(2024, 1, 20),\n}) as Ref<DateRange>\n\nwatch(value, (newValue) => {\n  emit(\"update:modelValue\", newValue)\n})\n\nconst locale = ref(\"en-US\")\nconst formatter = useDateFormatter(locale.value)\n\nconst placeholder = ref(value.value.start) as Ref<DateValue>\nconst secondMonthPlaceholder = ref(value.value.end) as Ref<DateValue>\n\nconst firstMonth = ref(\n  createMonth({\n    dateObj: placeholder.value,\n    locale: locale.value,\n    fixedWeeks: true,\n    weekStartsOn: 0,\n  }),\n) as Ref<Grid<DateValue>>\nconst secondMonth = ref(\n  createMonth({\n    dateObj: secondMonthPlaceholder.value,\n    locale: locale.value,\n    fixedWeeks: true,\n    weekStartsOn: 0,\n  }),\n) as Ref<Grid<DateValue>>\n\nfunction updateMonth(reference: \"first\" | \"second\", months: number) {\n  if (reference === \"first\") {\n    placeholder.value = placeholder.value.add({ months })\n  } else {\n    secondMonthPlaceholder.value = secondMonthPlaceholder.value.add({\n      months,\n    })\n  }\n}\n\nwatch(placeholder, (_placeholder) => {\n  firstMonth.value = createMonth({\n    dateObj: _placeholder,\n    weekStartsOn: 0,\n    fixedWeeks: false,\n    locale: locale.value,\n  })\n  if (isEqualMonth(secondMonthPlaceholder.value, _placeholder)) {\n    secondMonthPlaceholder.value = secondMonthPlaceholder.value.add({\n      months: 1,\n    })\n  }\n})\n\nwatch(secondMonthPlaceholder, (_secondMonthPlaceholder) => {\n  secondMonth.value = createMonth({\n    dateObj: _secondMonthPlaceholder,\n    weekStartsOn: 0,\n    fixedWeeks: false,\n    locale: locale.value,\n  })\n  if (isEqualMonth(_secondMonthPlaceholder, placeholder.value))\n    placeholder.value = placeholder.value.subtract({ months: 1 })\n})\n</script>\n\n<template>\n  <Popover>\n    <PopoverTrigger as-child>\n      <Button\n        variant=\"outline\"\n        :class=\"\n          cn(\n            'justify-start text-left font-normal',\n            !value && 'text-muted-foreground',\n          )\n        \"\n      >\n        <CalendarIcon class=\"mr-2 h-4 w-4\" />\n        <template v-if=\"value.start\">\n          <template v-if=\"value.end\">\n            {{\n              formatter.custom(toDate(value.start), {\n                dateStyle: \"medium\",\n              })\n            }}\n            -\n            {{\n              formatter.custom(toDate(value.end), {\n                dateStyle: \"medium\",\n              })\n            }}\n          </template>\n\n          <template v-else>\n            {{\n              formatter.custom(toDate(value.start), {\n                dateStyle: \"medium\",\n              })\n            }}\n          </template>\n        </template>\n        <template v-else> Pick a date </template>\n      </Button>\n    </PopoverTrigger>\n    <PopoverContent class=\"w-auto p-0\">\n      <RangeCalendarRoot\n        v-slot=\"{ weekDays }\"\n        v-model=\"value\"\n        v-model:placeholder=\"placeholder\"\n        class=\"p-3\"\n      >\n        <div\n          class=\"flex flex-col gap-y-4 mt-4 sm:flex-row sm:gap-x-4 sm:gap-y-0\"\n        >\n          <div class=\"flex flex-col gap-4\">\n            <div class=\"flex items-center justify-between\">\n              <button\n                :class=\"\n                  cn(\n                    buttonVariants({ variant: 'outline' }),\n                    'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100',\n                  )\n                \"\n                @click=\"updateMonth('first', -1)\"\n              >\n                <ChevronLeft class=\"h-4 w-4\" />\n              </button>\n              <div :class=\"cn('text-sm font-medium')\">\n                {{ formatter.fullMonthAndYear(toDate(firstMonth.value)) }}\n              </div>\n              <button\n                :class=\"\n                  cn(\n                    buttonVariants({ variant: 'outline' }),\n                    'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100',\n                  )\n                \"\n                @click=\"updateMonth('first', 1)\"\n              >\n                <ChevronRight class=\"h-4 w-4\" />\n              </button>\n            </div>\n            <RangeCalendarGrid>\n              <RangeCalendarGridHead>\n                <RangeCalendarGridRow>\n                  <RangeCalendarHeadCell\n                    v-for=\"day in weekDays\"\n                    :key=\"day\"\n                    class=\"w-full\"\n                  >\n                    {{ day }}\n                  </RangeCalendarHeadCell>\n                </RangeCalendarGridRow>\n              </RangeCalendarGridHead>\n              <RangeCalendarGridBody>\n                <RangeCalendarGridRow\n                  v-for=\"(weekDates, index) in firstMonth.rows\"\n                  :key=\"`weekDate-${index}`\"\n                  class=\"mt-2 w-full\"\n                >\n                  <RangeCalendarCell\n                    v-for=\"weekDate in weekDates\"\n                    :key=\"weekDate.toString()\"\n                    :date=\"weekDate\"\n                  >\n                    <RangeCalendarCellTrigger\n                      :day=\"weekDate\"\n                      :month=\"firstMonth.value\"\n                    />\n                  </RangeCalendarCell>\n                </RangeCalendarGridRow>\n              </RangeCalendarGridBody>\n            </RangeCalendarGrid>\n          </div>\n          <div class=\"flex flex-col gap-4\">\n            <div class=\"flex items-center justify-between\">\n              <button\n                :class=\"\n                  cn(\n                    buttonVariants({ variant: 'outline' }),\n                    'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100',\n                  )\n                \"\n                @click=\"updateMonth('second', -1)\"\n              >\n                <ChevronLeft class=\"h-4 w-4\" />\n              </button>\n              <div :class=\"cn('text-sm font-medium')\">\n                {{ formatter.fullMonthAndYear(toDate(secondMonth.value)) }}\n              </div>\n\n              <button\n                :class=\"\n                  cn(\n                    buttonVariants({ variant: 'outline' }),\n                    'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100',\n                  )\n                \"\n                @click=\"updateMonth('second', 1)\"\n              >\n                <ChevronRight class=\"h-4 w-4\" />\n              </button>\n            </div>\n            <RangeCalendarGrid>\n              <RangeCalendarGridHead>\n                <RangeCalendarGridRow>\n                  <RangeCalendarHeadCell\n                    v-for=\"day in weekDays\"\n                    :key=\"day\"\n                    class=\"w-full\"\n                  >\n                    {{ day }}\n                  </RangeCalendarHeadCell>\n                </RangeCalendarGridRow>\n              </RangeCalendarGridHead>\n              <RangeCalendarGridBody>\n                <RangeCalendarGridRow\n                  v-for=\"(weekDates, index) in secondMonth.rows\"\n                  :key=\"`weekDate-${index}`\"\n                  class=\"mt-2 w-full\"\n                >\n                  <RangeCalendarCell\n                    v-for=\"weekDate in weekDates\"\n                    :key=\"weekDate.toString()\"\n                    :date=\"weekDate\"\n                  >\n                    <RangeCalendarCellTrigger\n                      :day=\"weekDate\"\n                      :month=\"secondMonth.value\"\n                    />\n                  </RangeCalendarCell>\n                </RangeCalendarGridRow>\n              </RangeCalendarGridBody>\n            </RangeCalendarGrid>\n          </div>\n        </div>\n      </RangeCalendarRoot>\n    </PopoverContent>\n  </Popover>\n</template>\n","<script setup lang=\"ts\">\nimport { ref } from \"vue\"\nimport { Check, ChevronsUpDown, X } from \"lucide-vue-next\"\n\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\"\nimport { cn } from \"~/lib/utils\"\n\nlet { name } = defineProps<{\n  name: string\n}>()\n\nlet value = defineModel<string[]>({\n  default: [],\n})\n\ndefineEmits<{\n  (event: \"update:modelValue\", payload: string[]): void\n}>()\n\nlet open = ref(false)\n\nfunction toggleKeyword(keyword: string) {\n  if (value.value.includes(keyword)) {\n    value.value = value.value.filter((k) => k !== keyword)\n  } else {\n    value.value = [...value.value, keyword]\n  }\n}\n\nlet { data: keywordGroups } = await useApi(\"/keywords\")\n\nlet keywordsById = computed(() =>\n  keywordGroups.value?.reduce(\n    (acc, group) => {\n      group.keywords.forEach((keyword) => {\n        acc[keyword.id] = keyword\n      })\n      return acc\n    },\n    {} as Record<string, any>,\n  ),\n)\n</script>\n\n<style lang=\"css\" scoped>\n.PopoverContent {\n  width: var(--radix-popover-trigger-width);\n  max-height: var(--radix-popover-content-available-height);\n}\n</style>\n\n<template>\n  <input v-for=\"val in value\" type=\"hidden\" :name=\"name\" :value=\"val\" />\n  <div class=\"relative w-full flex flex-col gap-1.5\">\n    <div class=\"flex gap-1.5\" v-if=\"value.length\">\n      <button\n        v-for=\"keyword in value\"\n        @click=\"toggleKeyword(keyword)\"\n        :key=\"keyword\"\n        class=\"inline-flex items-center bg-gray-200 rounded text-primary-background px-2 py-1 text-xs\"\n      >\n        {{ keywordsById?.[keyword]?.nl_keyword }}\n        <X class=\"size-4 ml-1\" />\n      </button>\n    </div>\n    <Popover v-model:open=\"open\">\n      <PopoverTrigger as-child>\n        <Button\n          variant=\"outline\"\n          role=\"combobox\"\n          :aria-expanded=\"open\"\n          class=\"justify-between w-full\"\n        >\n          Add keyword\n          <ChevronsUpDown class=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent class=\"p-0 PopoverContent\">\n        <Command>\n          <CommandInput class=\"h-9\" placeholder=\"Search framework...\" />\n          <CommandEmpty>No framework found.</CommandEmpty>\n          <CommandList>\n            <CommandGroup v-for=\"group in keywordGroups\">\n              <CommandItem\n                v-for=\"keyword in group.keywords\"\n                :key=\"keyword.id\"\n                :value=\"keyword.id\"\n                @select=\"\n                  (ev) => {\n                    if (typeof ev.detail.value === 'string') {\n                      toggleKeyword(ev.detail.value)\n                    }\n                    open = false\n                  }\n                \"\n              >\n                <div class=\"\">\n                  <div class=\"text-[10px] text-muted-foreground\">\n                    {{ group.group_name_nl }}\n                  </div>\n                  {{ keyword.nl_keyword }}\n                </div>\n                <Check\n                  :class=\"\n                    cn(\n                      'ml-auto h-4 w-4',\n                      value.includes(keyword.id) ? 'opacity-100' : 'opacity-0',\n                    )\n                  \"\n                />\n              </CommandItem>\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { ref } from \"vue\"\nimport { Check, ChevronsUpDown, X } from \"lucide-vue-next\"\n\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\"\nimport { cn } from \"~/lib/utils\"\n\nlet { name } = defineProps<{\n  name: string\n}>()\n\nlet value = defineModel<string[]>({\n  default: [],\n})\n\ndefineEmits<{\n  (event: \"update:modelValue\", payload: string[]): void\n}>()\n\nlet open = ref(false)\n\nfunction toggleCollection(keyword: string) {\n  if (value.value.includes(keyword)) {\n    value.value = value.value.filter((k) => k !== keyword)\n  } else {\n    value.value = [...value.value, keyword]\n  }\n}\n\nlet { data: collections } = await useApi(\"/collections\")\n\nlet collectionsById = computed(() =>\n  collections.value?.collections.reduce(\n    (acc, collection) => {\n      acc[collection.id] = collection\n\n      return acc\n    },\n    {} as Record<string, (typeof collections.value.collections)[number]>,\n  ),\n)\n</script>\n\n<style lang=\"css\" scoped>\n.PopoverContent {\n  width: var(--radix-popover-trigger-width);\n  max-height: var(--radix-popover-content-available-height);\n}\n</style>\n\n<template>\n  <input v-for=\"val in value\" type=\"hidden\" :name=\"name\" :value=\"val\" />\n  <div class=\"relative w-full flex flex-col gap-1.5\">\n    <div class=\"flex gap-1.5\" v-if=\"value.length\">\n      <button\n        v-for=\"collectionId in value\"\n        @click=\"toggleCollection(collectionId)\"\n        :key=\"collectionId\"\n        class=\"inline-flex items-center bg-gray-200 rounded text-primary-background px-2 py-1 text-xs\"\n      >\n        {{ collectionsById?.[collectionId]?.title }}\n        <X class=\"size-4 ml-1\" />\n      </button>\n    </div>\n    <Popover v-model:open=\"open\">\n      <PopoverTrigger as-child>\n        <Button\n          variant=\"outline\"\n          role=\"combobox\"\n          :aria-expanded=\"open\"\n          class=\"justify-between w-full\"\n        >\n          Add collection\n          <ChevronsUpDown class=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent class=\"p-0 PopoverContent\">\n        <Command>\n          <CommandInput class=\"h-9\" placeholder=\"Search collection...\" />\n          <CommandEmpty>No collections found.</CommandEmpty>\n          <CommandList>\n            <CommandGroup>\n              <CommandItem\n                v-for=\"collection in collections?.collections\"\n                :key=\"collection.id\"\n                :value=\"collection.id\"\n                @select=\"\n                  (ev) => {\n                    if (typeof ev.detail.value === 'string') {\n                      toggleCollection(ev.detail.value)\n                    }\n                    open = false\n                  }\n                \"\n              >\n                <div class=\"\">\n                  <div class=\"text-[10px] text-muted-foreground\">\n                    {{ collection.description }}\n                  </div>\n                  {{ collection.title }}\n                </div>\n                <Check\n                  :class=\"\n                    cn(\n                      'ml-auto h-4 w-4',\n                      value.includes(collection.id)\n                        ? 'opacity-100'\n                        : 'opacity-0',\n                    )\n                  \"\n                />\n              </CommandItem>\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport { ref } from \"vue\"\nimport dateFormat from \"dateformat\"\nimport DateRangePicker from \"~/components/DateRangePicker.vue\"\nimport type { DateRange } from \"radix-vue\"\nimport Input from \"~/components/ui/input/Input.vue\"\nimport MapBrowser from \"~/components/MapBrowser.vue\"\nimport type { Extent } from \"ol/extent\"\nimport KeywordsCombobox from \"~/components/keywords/KeywordsCombobox.vue\"\nimport CollectionCombobox from \"~/components/collections/CollectionCombobox.vue\"\nimport { bboxPolygon } from \"@turf/turf\"\n\nconst route = useRoute()\n\nlet selectedItemId = ref<string>()\n\nlet daterange = ref<DateRange>()\nlet bbox = ref<Extent>([180, 90, -180, -90])\n\nlet datetime = computed(() => {\n  if (!route || !route.query) return undefined\n  \n  let { start, end } = route.query\n  if (start && end) {\n    return `${dateFormat(new Date(start as string), \"isoUtcDateTime\")}/${dateFormat(new Date(end as string), \"isoUtcDateTime\")}`\n  }\n})\n\nfunction onChangeBbox(newBox: Extent) {\n  bbox.value = newBox\n}\n\nlet keywordIds = computed(() => {\n  if (!route || !route.query || !route.query.keywords) return []\n  \n  const keywords = route.query.keywords\n  return (Array.isArray(keywords) ? keywords : [keywords])\n    .map((id) => id?.toString())\n    .filter(Boolean) as string[]\n})\n\nlet collectionIds = computed(() => {\n  if (!route || !route.query || !route.query.collections) return []\n  \n  const collections = route.query.collections\n  return (Array.isArray(collections) ? collections : [collections])\n    .map((id) => id?.toString())\n    .filter(Boolean) as string[]\n})\nlet filter = computed(() => {\n  let geometry = bbox.value ? bboxPolygon(bbox.value as [number, number, number, number]).geometry : undefined\n\n  return {\n    op: \"and\",\n    args: [\n      {\n        op: \"or\",\n        args: [\n          geometry\n            ? {\n                op: \"s_intersects\",\n                args: [\n                  {\n                    property: \"geometry\",\n                  },\n                  geometry,\n                ],\n              }\n            : undefined,\n          // The isNull operator does not work. The below is a workaround. It includes items that have no geometry by intersecting with a Polygon that covers the entire world.\n          route.query?.includeEmptyGeometry === \"on\"\n            ? {\n                op: \"not\",\n                args: [\n                  {\n                    op: \"s_intersects\",\n                    args: [\n                      {\n                        property: \"geometry\",\n                      },\n                      {\n                        type: \"Polygon\",\n                        coordinates: [\n                          [\n                            [-180, -90],\n                            [180, -90],\n                            [180, 90],\n                            [-180, 90],\n                            [-180, -90],\n                          ],\n                        ],\n                      },\n                    ],\n                  },\n                ],\n              }\n            : undefined,\n        ].filter(Boolean),\n      },\n      {\n        op: \"or\",\n        args: [\n          {\n            op: \"like\",\n            args: [\n              {\n                property: \"properties.title\",\n              },\n              `%${route.query?.q ?? \"\"}%`,\n            ],\n          },\n          {\n            op: \"like\",\n            args: [\n              {\n                property: \"properties.description\",\n              },\n              `%${route.query?.q ?? \"\"}%`,\n            ],\n          },\n        ],\n      },\n      keywordIds.value.length > 0\n        ? {\n            op: \"in\",\n            args: [\n              {\n                property: \"properties.keywords.id\",\n              },\n              keywordIds.value,\n            ],\n          }\n        : undefined,\n    ].filter(Boolean),\n  }\n})\n\nlet { data: searchResults, status } = useApi(\"/search\", {\n  method: \"post\",\n  body: {\n    collections: collectionIds.value,\n    datetime: datetime.value,\n    filter: filter.value,\n    \"filter-lang\": \"cql2-json\",\n  } as any,\n})\n</script>\n\n<template>\n  <div class=\"grid grid-cols-2 justify-center h-[calc(100vh-57px)]\">\n    <div class=\"relative h-full overflow-hidden\">\n      <div\n        v-if=\"status === 'pending'\"\n        class=\"z-10 absolute inset-0 flex items-center justify-center bg-white/80\"\n      >\n        <Loader2 class=\"w-4 h-4 animate-spin\" />\n      </div>\n      <div class=\"p-5 h-full overflow-y-auto\">\n        <form class=\"flex flex-col gap-1.5\" method=\"get\">\n          <Input\n            name=\"q\"\n            placeholder=\"Search title or description...\"\n            :model-value=\"route.query?.q as string || ''\"\n          />\n\n          <input name=\"start\" type=\"hidden\" :value=\"daterange?.start\" />\n          <input name=\"end\" type=\"hidden\" :value=\"daterange?.end\" />\n          <DateRangePicker v-model=\"daterange\" />\n\n          <KeywordsCombobox\n            name=\"keywords\"\n            placeholder=\"Keywords\"\n            :model-value=\"keywordIds\"\n          />\n\n          <CollectionCombobox\n            name=\"collections\"\n            placeholder=\"Collections\"\n            :model-value=\"collectionIds\"\n          />\n\n          <div class=\"flex items-center space-x-2 py-2\">\n            <Checkbox\n              id=\"includeEmptyGeometry\"\n              name=\"includeEmptyGeometry\"\n              :default-checked=\"route.query?.includeEmptyGeometry === 'on'\"\n            />\n            <label\n              for=\"includeEmptyGeometry\"\n              class=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n            >\n              Include empty geometries\n            </label>\n          </div>\n\n          <Button>Search</Button>\n        </form>\n\n        <Card\n          v-for=\"item of searchResults?.features\"\n          :key=\"item.id\"\n          :class=\"selectedItemId === item.id ? 'border-emerald-500' : ''\"\n        >\n          <CardHeader>\n            <CardTitle class=\"text-xl\">\n              {{ item.properties.title ?? item.id }}\n            </CardTitle>\n            <CardDescription>{{ item.properties.description }}</CardDescription>\n          </CardHeader>\n          <CardContent v-if=\"item.properties.datetime\">\n            <NuxtLink :to=\"'/items/' + item.id + '?readonly=true'\"\n              >View details</NuxtLink\n            >\n            <div class=\"text-xs text-muted-foreground\">\n              {{\n                dateFormat(new Date(item.properties.datetime), \"mmmm dS, yyyy\")\n              }}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n\n    <div class=\"relative h-full\">\n      <ClientOnly>\n        <MapBrowser\n          :feature-collection=\"searchResults\"\n          @change-bbox=\"onChangeBbox\"\n          @hover-item=\"selectedItemId = $event\"\n        />\n      </ClientOnly>\n    </div>\n  </div>\n</template>\n"],"names":["_useModel","_withAsyncContext"],"mappings":"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"}