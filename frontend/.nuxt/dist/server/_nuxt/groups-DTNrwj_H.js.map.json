{"file":"groups-DTNrwj_H.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQI,QAAA,EAAE,SAAS;AAEf,QAAI,EAAE,MAAM,eAAe,aAAkB,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,OAAO,+BAAgB,CAAA;AAEpE,QAAI,+BAA+B;AAAA,MACjC,EAAE,OAAO;AAAA,QACP,eAAe,EAAE,SAAS,IAAI,CAAC;AAAA,QAC/B,eAAe,EAAE,SAAS,IAAI,CAAC;AAAA,MAAA,CAChC;AAAA,IAAA;AAGH,QAAI,yBAAyB,QAAQ;AAAA,MACnC,kBAAkB;AAAA,IAAA,CACnB;AAEmC,2BAAuB;AAAA,MACzD,OAAO,WAAW;AAChB,cAAM,KAAK,iBAAiB;AAAA,UAC1B,QAAQ;AAAA,UACR,MAAM;AAAA,UACN,SAAS;AAAA,YACP,gBAAgB;AAAA,UAClB;AAAA,QAAA,CACD;AAEK,cAAA;AAAA,UACJ,OAAO;AAAA,QAAA,CACR;AAEO;MACV;AAAA,IACF;AAEA,wBAAoB,CAAC,UAAU;AACzB,UAAA,CAAC,MAAM,OAAO,UAAU;AAClB;MACV;AAAA,IAAA,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["_withAsyncContext"],"sources":["../../../../pages/keywords/groups.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { toTypedSchema } from \"@vee-validate/zod\"\nimport { useForm } from \"vee-validate\"\nimport { z } from \"zod\"\nimport Lister from \"~/components/lister/Lister.vue\"\nimport { Button } from \"~/components/ui/button\"\nimport { toast } from \"~/components/ui/toast\"\n\nlet { $api } = useNuxtApp()\n\nlet { data: keywordgroups, refresh } = await useApi(\"/keywordgroups\")\n\nlet createKeywordgroupFormSchema = toTypedSchema(\n  z.object({\n    group_name_nl: z.string().min(2),\n    group_name_en: z.string().min(2),\n  }),\n)\n\nlet createKeywordgroupForm = useForm({\n  validationSchema: createKeywordgroupFormSchema,\n})\n\nlet onSubmitCreateKeywordgoupForm = createKeywordgroupForm.handleSubmit(\n  async (values) => {\n    await $api(\"/keywordgroup\", {\n      method: \"post\",\n      body: values,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n\n    toast({\n      title: \"Keyword group created\",\n    })\n\n    refresh()\n  },\n)\n\nonBeforeRouteUpdate((guard) => {\n  if (!guard.params.group_id) {\n    refresh()\n  }\n})\n</script>\n\n<template>\n  <div class=\"grid grid-cols-2 gap-12\">\n    <div>\n      <div\n        class=\"uppercase text-muted-foreground text-xs font-semibold tracking-wider\"\n      >\n        Keyword Groups\n      </div>\n      <div class=\"mt-3\">\n        <Lister>\n          <ListerItem\n            v-for=\"keywordgroup in keywordgroups\"\n            :key=\"keywordgroup.id\"\n            :to=\"`/keywords/groups/${keywordgroup.id}`\"\n          >\n            {{ keywordgroup.group_name_nl }}\n          </ListerItem>\n        </Lister>\n\n        <hr class=\"my-8\" />\n\n        <h2 class=\"text font-medium\">Create keyword group</h2>\n        <form @submit=\"onSubmitCreateKeywordgoupForm\" class=\"mt-3\">\n          <FormField v-slot=\"{ componentField }\" name=\"group_name_nl\">\n            <FormItem>\n              <FormLabel>Group name NL</FormLabel>\n              <FormControl>\n                <Input type=\"text\" v-bind=\"componentField\" />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          </FormField>\n\n          <FormField v-slot=\"{ componentField }\" name=\"group_name_en\">\n            <FormItem>\n              <FormLabel>Group name EN</FormLabel>\n              <FormControl>\n                <Input type=\"text\" v-bind=\"componentField\" />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          </FormField>\n\n          <Button type=\"submit\" class=\"mt-5\">Create</Button>\n        </form>\n      </div>\n    </div>\n\n    <div>\n      <NuxtPage />\n    </div>\n  </div>\n</template>\n"],"version":3}