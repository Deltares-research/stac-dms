import { z } from "zod";
import { schemaWithBoundingBox } from "./base.js";
import { lineString } from "./line-string.js";
import { multiLineString } from "./multi-line-string.js";
import { multiPoint } from "./multi-point.js";
import { multiPolygon } from "./multi-polygon.js";
import { point } from "./point.js";
import { polygon } from "./polygon.js";
const geometryCollectionSchema = schemaWithBoundingBox.extend({
    type: z.literal("GeometryCollection"),
    geometries: z.lazy(() => z.array(geometry())),
});
export function geometryCollection() {
    return geometryCollectionSchema;
}
const geometrySchema = z.union([
    lineString(),
    multiLineString(),
    multiPoint(),
    multiPolygon(),
    point(),
    polygon(),
    geometryCollection(),
]);
export function geometry() {
    return geometrySchema;
}
//# sourceMappingURL=geometry.js.map