name: Deltares Fairdata Backend CI
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches:
      - main
      - prod
    paths:
      - "deltares-fairdata/api/**"
      - ".github/workflows/deltares_fairdata_backend_ci.yml"
  pull_request:
    branches:
      - main
      - prod
    paths:
      - "deltares-fairdata/api/**"
      - ".github/workflows/deltares_fairdata_backend_ci.yml"

  # Allow manual trigger
  workflow_dispatch:

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

env:
  REGISTRY_ADDRESS: containers.deltares.nl
  HARBOR_PROJECT: fair-data
  TAG: ${{ github.ref == 'refs/heads/prod' && 'prod' || 'dev' }}
  TARGET: ${{ github.ref == 'refs/heads/prod' && 'run-prod' || 'run-dev' }}

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install poetry
        uses: abatilo/actions-poetry@v2

      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Define a cache for the virtual environment based on the dependencies lock file
        uses: actions/cache@v3
        with:
          path: ./deltares-fairdata/api/.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install the project dependencies
        working-directory: deltares-fairdata/api
        run: poetry install --with=dev

      - name: Run Pytest
        working-directory: deltares-fairdata/api
        run: poetry run pytest tests/ --junit-xml=test-results.xml

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            deltares-fairdata/api/test-results.xml

  build-image:
    runs-on: ubuntu-latest
    needs: pytest
    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_ADDRESS }}
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: deltares-fairdata/api
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: development
          push: ${{ github.event_name != 'pull_request'}} # Don't push on pull requests, only on push
          tags: |
            ${{ env.REGISTRY_ADDRESS }}/${{ env.HARBOR_PROJECT }}/stac-fastapi-os:${{ github.sha }}
            ${{ env.REGISTRY_ADDRESS }}/${{ env.HARBOR_PROJECT }}/stac-fastapi-os:${{ env.TAG }}
