"""add role as enum instead of object

Revision ID: 398cc2890fe4
Revises: 14adef09c9d6
Create Date: 2025-03-27 14:07:35.226696

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "398cc2890fe4"
down_revision: Union[str, None] = "14adef09c9d6"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "DATA_STEWARD", "DATA_PRODUCER", "ADMIN", "KEYWORD_EDITOR", name="role_enum"
    ).create(op.get_bind())
    op.create_table(
        "grouprole",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("object_id", sqlmodel.AutoString(), nullable=False),
        sa.Column(
            "role",
            postgresql.ENUM(
                "DATA_STEWARD",
                "DATA_PRODUCER",
                "ADMIN",
                "KEYWORD_EDITOR",
                name="role_enum",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("group_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["group.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("permission")
    op.drop_table("role")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "permission",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("object", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("role_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("group_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"], ["group.id"], name="permission_group_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["role_id"], ["role.id"], name="permission_role_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="permission_pkey"),
    )
    op.create_table(
        "role",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="role_pkey"),
    )
    op.drop_table("grouprole")
    sa.Enum(
        "DATA_STEWARD", "DATA_PRODUCER", "ADMIN", "KEYWORD_EDITOR", name="role_enum"
    ).drop(op.get_bind())
    # ### end Alembic commands ###
