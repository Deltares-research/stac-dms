services:
  backend:
    container_name: backend
    image: stac-dms/backend
    build:
      context: ./api
      target: production
    env_file:
      - ./api/.env
    ports:
      - 8000:8000
    expose:
      - 8000
    environment:
      - STAC_FASTAPI_TITLE=Deltares Data Management Suite STAC API
      - STAC_FASTAPI_DESCRIPTION=A STAC API containing Deltares datasets
      - STAC_FASTAPI_VERSION=3.0.0a2
      - APP_HOST=0.0.0.0
      - APP_PORT=8000
      - RELOAD=true
      - ENVIRONMENT=local
      - WEB_CONCURRENCY=10
      - ES_HOST=opensearch
      - ES_PORT=9202
      - ES_USE_SSL=false
      - ES_VERIFY_CERTS=false
      - BACKEND=opensearch
      - DB_CONNECTION_URL=postgresql+psycopg://postgres:postgres@postgres:5432/postgres
    volumes:
      - ./api/dmsapi:/app/dmsapi
      - ./api/tests:/app/tests
      - ./api/scripts:/app/scripts
      - ./api/pyproject.toml:/app/pyproject.toml
      - ./api/uv.lock:/app/uv.lock
    depends_on:
      - opensearch
      - postgres
    command: bash -c "./scripts/wait-for-it.sh os-container:9202 && uv run --no-dev fastapi dev dmsapi/app.py --host 0.0.0.0 --port 8000"

  postgres:
    image: postgres:16
    container_name: postgres
    # Add any additional configuration for the Postgres container here
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

  opensearch:
    container_name: os-container
    image: opensearchproject/opensearch:2.15.0
    hostname: opensearch
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - ./api/opensearch/config/opensearch.yml:/usr/share/opensearch/config/opensearch.yml
      - ./api/opensearch/snapshots:/usr/share/opensearch/snapshots
    ports:
      - "9202:9202"
      - 9600:9600

  frontend:
    build:
      context: ./frontend
      target: run-dev
    env_file:
      - ./frontend/.env
    environment:
      - API_URL=http://backend:8000
    ports:
      - 24678:24678
      - 3000:3000
    depends_on:
      - backend
    container_name: frontend
    image: stac-dms/frontend
    tmpfs:
      - /tmp
    volumes:
      - ./frontend:/src
      - /src/node_modules
      - /nuxt/.nuxt

  proxy:
    container_name: proxy
    image: stac-dms/proxy
    build:
      context: ./proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./proxy/Caddyfile:/etc/caddy/Caddyfile
      - ./proxy/data/data:/data
      - ./proxy/data/config:/config
    depends_on:
      - backend
      - frontend
    environment:
      - DOMAIN=localhost
      - PROXY_BACKEND_HOST=backend
      - PROXY_BACKEND_PORT=8000
      - PROXY_FRONTEND_HOST=frontend
      - PROXY_FRONTEND_PORT=3000
